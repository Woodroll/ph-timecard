{"version":3,"sources":["fillable.pdf","componets/FillerButton.js","componets/DayInputs.js","componets/Form.js","classes/Days.js","App.js","reportWebVitals.js","index.js"],"names":["SavePDF","props","timekeys","fillForm","a","url","pdf","fetch","headers","then","res","console","log","arrayBuffer","formPdfBytes","PDFDocument","load","pdfDoc","form","getForm","getFields","map","f","getName","Object","keys","timeCard","forEach","key","getTextField","setText","daysOBJ","value","includes","time24Hr","Number","slice","timeMn","time12Hr","today","Date","now","toLocaleDateString","saveAsBase64","dataUri","pdfBytes","FileSaver","saveAs","Button","variant","endIcon","onClick","DayInputs","setDays","abvList","DayColHead","abv","Typography","color","align","parseTime","time","Math","round","calWeekHours","total","prevDays","toString","calcDayHours","handleChange","e","target","name","getTimeInput","end","Grid","item","container","fullWidth","sx","mt","id","onBlur","Stack","spacing","alignItems","direction","xs","sm","Select","label","InputLabel","onChange","width","MenuItem","TextField","type","InputLabelProps","shrink","elevation","inputProps","step","justifyContent","i","Form","setTimeCard","Container","maxWidth","component","CssBaseline","className","onSubmit","preventDefault","onInput","persist","prevTC","noValidate","md","required","dateSunday","parse","date","setDate","getDate","formatedDate","getMonth","justify","Days","dayAbvs","length","this","undefined","index","App","useState","useEffect","data","localStorage","getItem","JSON","daysData","setItem","stringify","StyledEngineProvider","injectFirst","formPDF","Paper","position","bottom","left","right","BottomNavigation","showLabels","BottomNavigationAction","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdb383e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fillable.8a5c035d.pdf\";","import React from 'react';\r\nimport { PDFDocument } from 'pdf-lib';\r\nimport FileSaver from 'file-saver';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst SavePDF  = (props) => {\r\n\r\n    const timekeys = [\"MONIn\", \"TUEIn\", \"WEDIn\", \"THURIn\", \"FRIIn\", \"SATIn\", \"SUNIn\", \"MONOut\", \"TUEOut\", \"WEDOut\", \"THUROut\", \"FRIOut\", \"SATOut\", \"SUNOut\", \r\n    \"MONIn_2\", \"TUEIn_2\", \"WEDIn_2\", \"THURIn_2\", \"FRIIn_2\", \"SATIn_2\", \"SUNIn_2\", \"MONOut_2\", \"TUEOut_2\", \"WEDOut_2\", \"THUROut_2\", \"FRIOut_2\", \"SATOut_2\", \"SUNOut_2\",\r\n    \"MONIn_3\", \"TUEIn_3\", \"WEDIn_3\", \"THURIn_3\", \"FRIIn_3\", \"SATIn_3\", \"SUNIn_3\", \"MONOut_3\", \"TUEOut_3\", \"WEDOut_3\", \"THUROut_3\", \"FRIOut_3\", \"SATOut_3\", \"SUNOut_3\",\r\n    ]\r\n\r\n    const fillForm = async () => {\r\n        const url = props.pdf;\r\n        const formPdfBytes = await fetch(url,\r\n        {headers:{'Content-Type':'application/pdf'}})\r\n            .then(res => {\r\n                console.log(res.headers)\r\n                return (res.arrayBuffer())})\r\n        \r\n        const pdfDoc = await PDFDocument.load(formPdfBytes);\r\n\r\n        const form = pdfDoc.getForm();\r\n        console.log(form.getFields().map(f => f.getName()));\r\n        Object.keys(props.timeCard).forEach(key => {\r\n            console.log(`key:${key}, value:${props.timeCard[key]}`)\r\n            form.getTextField(key).setText(props.timeCard[key])\r\n        });\r\n        \r\n        Object.keys(props.daysOBJ).forEach((key, value) => {\r\n            console.log(`key:${key}, value:${props.daysOBJ[key]}`);\r\n            if (props.daysOBJ[key]) { \r\n                if (timekeys.includes(key)) {\r\n                    console.log(`found key:${key}`)\r\n                    const time24Hr = Number(props.daysOBJ[key].slice(0,2));\r\n                    const timeMn = props.daysOBJ[key].slice(3,5);\r\n                    if(time24Hr > 12) {\r\n                        const time12Hr = time24Hr - 12;\r\n                        form.getTextField(key).setText(`${time12Hr}:${timeMn}`);\r\n                    }else {form.getTextField(key).setText(`${time24Hr}:${timeMn}`)};}\r\n                else {form.getTextField(key).setText(props.daysOBJ[key])};\r\n            }\r\n        });\r\n\r\n        const today = new Date(Date.now()).toLocaleDateString()\r\n        form.getTextField(\"Employee_Signature\").setText(props.timeCard[\"Name\"])\r\n        form.getTextField(\"Employee_Sign_Date\").setText(today)\r\n\r\n        const pdfBytes = await pdfDoc.saveAsBase64({ dataUri: true }); \r\n        FileSaver.saveAs(pdfBytes, `Time Card ${props.timeCard[\"Name\"]} for ${props.timeCard[\"Pay Week Ending\"]}`, \"application/pdf\");\r\n    }\r\n\r\n    return (<Button variant=\"contained\" endIcon={<PictureAsPdfIcon/>} onClick={() => {fillForm()}}>Download PDF</Button>)\r\n}\r\n\r\nexport default SavePDF;","import React from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Stack from '@material-ui/core/Stack';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function DayInputs(props) {\r\n    const {daysOBJ, setDays, abvList} = props\r\n\r\n    console.log(daysOBJ);\r\n\r\n    function DayColHead(props) {\r\n        const {abv, daysOBJ} = props\r\n        return (<>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {abv}\r\n                {\" - \"}\r\n                {daysOBJ[`${abv}Date_es_:date`]}\r\n            </Typography>\r\n            <Typography>\r\n                {daysOBJ[`${abv}HOURS WORKED`]? daysOBJ[`${abv}HOURS WORKED`]+\" hrs.\":\" -- \"}\r\n            </Typography>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    function parseTime(time){\r\n        console.log((Math.round(time.slice(3,5)/15))*25*.01)\r\n        return Number(time.slice(0,2)) + (Math.round(time.slice(3,5)/15))*25*.01\r\n    }\r\n\r\n    function calWeekHours() {\r\n        let total = 0\r\n        abvList.forEach(abv => {if(daysOBJ[`${abv}HOURS WORKED`]) {total += Number(daysOBJ[`${abv}HOURS WORKED`])}});\r\n        console.log(\"week total:\", total)\r\n        setDays(prevDays => ({...prevDays, \"GRAND TOTALHOURS WORKED\" : total.toString() }));\r\n    }\r\n\r\n    // const totals = [daysOBJ[\"MONHOURS WORKED\"], daysOBJ[\"TUEHOURS WORKED\"],daysOBJ[\"WEDHOURS WORKED\"],\r\n    // daysOBJ[\"THURHOURS WORKED\"], daysOBJ[\"FRIHOURS WORKED\"], daysOBJ[\"SATHOURS WORKED\"], daysOBJ[\"SUNHOURS WORKED\"],]\r\n\r\n    function calcDayHours(abv) {\r\n        console.log(\"Calc Ran!!!\", abv)\r\n        let total = 0\r\n        if (daysOBJ[`${abv}In`] && daysOBJ[`${abv}Out`]) {\r\n            total = parseTime(daysOBJ[`${abv}Out`]) - parseTime(daysOBJ[`${abv}In`])\r\n            if (daysOBJ[`${abv}In_2`] && daysOBJ[`${abv}Out_2`]) {\r\n                total += parseTime(daysOBJ[`${abv}Out_2`]) - parseTime(daysOBJ[`${abv}In_2`])\r\n                if (daysOBJ[`${abv}In_3`] && daysOBJ[`${abv}Out_3`]) {\r\n                    total += parseTime(daysOBJ[`${abv}Out_3`]) - parseTime(daysOBJ[`${abv}In_3`])\r\n                    if (daysOBJ[`${abv}In_4`] && daysOBJ[`${abv}Out_4`]) {\r\n                        total += parseTime(daysOBJ[`${abv}Out_4`]) - parseTime(daysOBJ[`${abv}In_4`])\r\n                    }\r\n                }\r\n            }        \r\n        }\r\n        setDays(prevDays => ({...prevDays, [`${abv}HOURS WORKED`]: total.toString() }));\r\n        console.log(\"total:\", total);\r\n        calWeekHours()\r\n    }\r\n\r\n    function handleChange(e) {\r\n        //e.persist();\r\n        setDays(prevDays => ({...prevDays, [e.target.name]: e.target.value }));\r\n        calWeekHours()\r\n    }\r\n\r\n    function getTimeInput(abv, end, key){\r\n        return(<Grid item container fullWidth sx={12} mt={3} name={abv} key={key} id={abv} onClick={e => {calcDayHours(abv); calWeekHours();}} onBlur={e => {calcDayHours(abv); calWeekHours();}}>\r\n            <Stack spacing={1}  alignItems=\"stretch\" direction={{ xs: 'row', sm: 'column' }}>\r\n            <Select\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                label={<InputLabel>Type</InputLabel>}\r\n                name={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                value={daysOBJ[`${abv}Type Reg Vac Sick Pers Hol${end}`]}\r\n                onChange={e => {handleChange(e)}}\r\n                sx={{ width: 150 }}\r\n            >\r\n                <MenuItem value={\"\"}>---</MenuItem>\r\n                <MenuItem value={\"Reg\"}>Reg</MenuItem>\r\n                <MenuItem value={\"Vac\"}>Vac</MenuItem>\r\n                <MenuItem value={\"Sick\"}>Sick</MenuItem>\r\n                <MenuItem value={\"Pers\"}>Pers</MenuItem>\r\n                <MenuItem value={\"Hol\"}>Hol</MenuItem>\r\n            </Select>\r\n\r\n            <TextField\r\n                label=\"In\"\r\n                type=\"time\"\r\n                fullWidth\r\n                name={`${abv}In${end}`}\r\n                value={daysOBJ[`${abv}In${end}`]}\r\n                onChange={handleChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                    elevation: 0,\r\n                }}\r\n                inputProps={{\r\n                    step: 1500, // 15 min\r\n                }}\r\n                elevation={0}\r\n                // sx={{ width: 150 }}\r\n            />\r\n            \r\n            <TextField\r\n                label=\"Out\"\r\n                type=\"time\"\r\n                fullWidth\r\n                name={`${abv}Out${end}`}\r\n                value={daysOBJ[`${abv}Out${end}`]}\r\n                onChange={e => {handleChange(e)}}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 1500, // 15 min\r\n                }}\r\n                // sx={{ width: 150 }}\r\n            />\r\n        </Stack>    \r\n        </Grid>            \r\n        )\r\n    }\r\n    \r\n\r\n    return (<Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n            {abvList.map((abv, i) => {\r\n                return(<Stack item fullWidth sm={12} xs={12} key={i} container spacing={0} alignItems=\"center\">\r\n                    <Stack mt={3} ><DayColHead  abv={abv} daysOBJ={daysOBJ}/></Stack>\r\n                    {getTimeInput(abv, \"\", 1)}\r\n                    {getTimeInput(abv, \"_2\", 2)}\r\n                    {getTimeInput(abv, \"_3\", 3)}\r\n                </Stack>)\r\n            })}\r\n            </Grid>)\r\n}\r\n","import React from 'react';\r\nimport {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DayInputs from './DayInputs.js';\r\n\r\n\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// const useStyles = createStyles((theme) => {return ({\r\n//   paper: {\r\n//     marginTop: theme.spacing(7),\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//   },\r\n//   avatar: {\r\n//     margin: theme.spacing(1),\r\n//     backgroundColor: theme.palette.secondary.main,\r\n//   },\r\n//   form: {\r\n//     width: '100%', // Fix IE 11 issue.\r\n//     marginTop: theme.spacing(3),\r\n//   },\r\n//   submit: {\r\n//     margin: theme.spacing(3, 0, 2),\r\n//   },\r\n// })});\r\n\r\n\r\nconst Form = (props) => {\r\n    // const classes = useStyles();\r\n    const {timeCard, setTimeCard, daysOBJ, setDays, abvList} = props\r\n\r\n    function handleChange(e) {\r\n        e.persist();\r\n        setTimeCard(prevTC => ({...prevTC, [e.target.name]: e.target.value }));\r\n        //console.log(timeCard);\r\n    }\r\n\r\n    function handleWeekChange(e) {\r\n        e.persist();\r\n        setTimeCard(prevTC => ({...prevTC, [e.target.name]: e.target.value }));\r\n        abvList.forEach((abv, i)=>{\r\n          const dateSunday = new Date(Date.parse(`${e.target.value}T00:00:00`));             \r\n          const date = new Date(dateSunday.setDate(dateSunday.getDate() - (6 - i)))\r\n          const formatedDate = `${date.getMonth()+1}/${date.getDate()}`\r\n          console.log(`i:${i}, date:${date}, fd:${formatedDate}`)\r\n         \r\n          setDays(prevDays => ({...prevDays, [`${abv}Date_es_:date`]  : formatedDate})) \r\n  })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n    <Container maxWidth=\"lg\" component=\"main\">\r\n      <CssBaseline />\r\n      <div className=\"classes.paper\">\r\n        <Typography component=\"h1\" variant=\"h3\">\r\n          Time Card\r\n        </Typography>\r\n        <form className=\"classes.form\" onSubmit={handleSubmit} onInput={handleChange} noValidate>\r\n\r\n            <Grid container spacing={2}>\r\n            \r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Name\"\r\n                label=\"Name\"\r\n                name=\"Name\"\r\n                value={timeCard? timeCard[\"Name\"]:\"\"}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Position\"\r\n                label=\"Position\"\r\n                name=\"Position\"\r\n                value={timeCard? timeCard[\"Position\"]:\"\"}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <TextField\r\n                //TODO: Sundays only???\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"Pay Week Ending\"\r\n                label=\"Pay Week Ending\"\r\n                id=\"PayWeekEnding\"\r\n                onChange = {handleWeekChange}\r\n                value={timeCard? timeCard[\"Pay Week Ending\"]:\"\"}\r\n                \r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            \r\n\r\n            <DayInputs \r\n                daysOBJ={daysOBJ}\r\n                setDays={setDays}\r\n                abvList={abvList}/>\r\n\r\n            </Grid> \r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"classes.submit\"\r\n            // onClick={e => console.log(e)}\r\n          >\r\n            Time Card\r\n          </Button>\r\n\r\n          \r\n\r\n\r\n          <Grid container justify=\"flex-end\">\r\n            {/* <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid> */}\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={5}>\r\n      </Box> */}\r\n    </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default Form\r\n","class Days {\r\n\r\n    constructor(dayAbvs) {\r\n        for (let i = 0; i < dayAbvs.length; i++) {\r\n                this[`${dayAbvs[i]}Date_es_:date`] = undefined;\r\n                this[`${dayAbvs[i]}HOURS WORKED`] = undefined;\r\n                for (let index = 1; index < 4; index++) {\r\n                    let end = \"\"\r\n                    if (index !== 1){\r\n                        end = `_${index}`\r\n                    }\r\n                    this[`${dayAbvs[i]}Type Reg Vac Sick Pers Hol${end}`] = \"\";\r\n                    this[`${dayAbvs[i]}In${end}`] = undefined;\r\n                    this[`${dayAbvs[i]}Out${end}`] = undefined;              \r\n                }    \r\n        }\r\n    }\r\n    [\"GRAND TOTALHOURS WORKED\"]() {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Days","import formPDF from './fillable.pdf';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport Days from './classes/Days'\nimport { StyledEngineProvider } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\n// import RestoreIcon from '@material-ui/icons/Restore';\n// import ArchiveIcon from '@material-ui/icons/Archive';\n\n\nfunction App() {\n\n  const abvList = [\"MON\", \"TUE\", \"WED\", \"THUR\", \"FRI\", \"SAT\", \"SUN\"]\n  const [daysOBJ, setDays] = useState(new Days(abvList))\n  \n  const [timeCard, setTimeCard] = useState({\n    \"Name\" : undefined,\n    \"Position\": undefined,\n    \"Pay Week Ending\": undefined,\n  });\n\n  \n  function setDatesOfTheWeek(inDate){\n    abvList.forEach((abv, i)=>{\n    const dateSunday = new Date(Date.parse(`${inDate}T00:00:00`));             \n    const date = new Date(dateSunday.setDate(dateSunday.getDate() - (6 - i)))\n    const formatedDate = `${date.getMonth()+1}/${date.getDate()}`\n    console.log(`i:${i}, date:${date}, fd:${formatedDate}`)\n   \n    setDays(prevDays => ({...prevDays, [`${abv}Date_es_:date`]  : formatedDate})) \n    })\n  }\n\n  function calWeekHours() {\n    let total = 0\n    abvList.forEach(abv => {if(daysOBJ[`${abv}HOURS WORKED`]) {total += Number(daysOBJ[`${abv}HOURS WORKED`])}});\n    console.log(\"week total:\", total)\n    setDays(prevDays => ({...prevDays, \"GRAND TOTALHOURS WORKED\" : total.toString() }));\n  }\n\n  useEffect(() => {\n    // getPDF()\n    const data = localStorage.getItem(\"my-time-card\"); \n    if (data) {\n      setTimeCard(JSON.parse(data))\n    };\n    \n    const daysData = localStorage.getItem(\"my-days\"); \n    if (daysData) {\n        setDays(JSON.parse(daysData))\n    };\n\n    }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard))\n    localStorage.setItem(\"my-days\", JSON.stringify(daysOBJ))\n  })\n\n  return (\n    <StyledEngineProvider injectFirst>\n    <div className=\"App\">\n        <SavePDF \n          pdf={formPDF}\n          timeCard={timeCard}\n          daysOBJ={daysOBJ}\n          />\n        <Form\n        timeCard = {timeCard}\n        setTimeCard = {setTimeCard}\n        daysOBJ={daysOBJ}\n        setDays={setDays}\n        abvList={abvList}\n        />\n\n        <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={1}>\n          <BottomNavigation\n                showLabels\n                // value={value}\n                // onChange={(event, newValue) => {\n                //     setValue(newValue);\n                // }}\n            >\n            <BottomNavigationAction label={daysOBJ[\"GRAND TOTALHOURS WORKED\"]?`  TOTAL HOURS:${daysOBJ[\"GRAND TOTALHOURS WORKED\"]}`:\"\"} />\n            <SavePDF \n              pdf={formPDF}\n              timeCard={timeCard}\n              daysOBJ={daysOBJ}\n            />\n            {/* <BottomNavigationAction label=\"Archive\" icon={<ArchiveIcon />} /> */}\n          </BottomNavigation>\n        </Paper>\n \n    </div>\n    </StyledEngineProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}