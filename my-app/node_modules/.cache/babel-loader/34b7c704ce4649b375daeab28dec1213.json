{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\ph-timecard\\\\ph-timecard\\\\my-app\\\\src\\\\componets\\\\FillerButton.js\";\nimport React from 'react';\nimport { PDFDocument } from 'pdf-lib';\nimport FileSaver from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fillForm = async props => {\n  // let fileReader = new FileReader();\n  const url = props.pdf;\n  const formPdfBytes = await fetch(url) //{headers:{'Content-Type':'application/pdf'}}\n  .then(res => {\n    console.log(res.headers);\n    return res.arrayBuffer();\n  }); // fileReader.onload = function(e) {\n  //     // The file's text will be printed here\n  //     console.log(e.target.result)\n  //   };\n\n  console.log(formPdfBytes);\n  const pdfDoc = await PDFDocument.load(formPdfBytes);\n  const form = pdfDoc.getForm();\n  const pdfBytes = await pdfDoc.save();\n  FileSaver.saveAs(pdfBytes, \"./pdf-lib_form_creation_example.pdf\", \"application/pdf\");\n};\n\nconst SavePDF = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onclick: fillForm(props),\n    children: \"Fill PDF\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n\n_c = SavePDF;\nexport default SavePDF;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavePDF\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/componets/FillerButton.js"],"names":["React","PDFDocument","FileSaver","fillForm","props","url","pdf","formPdfBytes","fetch","then","res","console","log","headers","arrayBuffer","pdfDoc","load","form","getForm","pdfBytes","save","saveAs","SavePDF"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9B;AACA,QAAMC,GAAG,GAAGD,KAAK,CAACE,GAAlB;AACA,QAAMC,YAAY,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAL,CAC3B;AAD2B,GAEtBI,IAFsB,CAEjBC,GAAG,IAAI;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA,WAAQH,GAAG,CAACI,WAAJ,EAAR;AAA2B,GAJR,CAA3B,CAH8B,CAQ9B;AACA;AACA;AACA;;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,QAAMQ,MAAM,GAAG,MAAMd,WAAW,CAACe,IAAZ,CAAiBT,YAAjB,CAArB;AAEA,QAAMU,IAAI,GAAGF,MAAM,CAACG,OAAP,EAAb;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACK,IAAP,EAAvB;AAEAlB,EAAAA,SAAS,CAACmB,MAAV,CAAiBF,QAAjB,EAA2B,qCAA3B,EAAkE,iBAAlE;AACH,CApBD;;AAsBA,MAAMG,OAAO,GAAKlB,KAAD,IAAW;AACxB,sBAAQ;AAAQ,IAAA,OAAO,EAAED,QAAQ,CAACC,KAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CAFD;;KAAMkB,O;AAIN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { PDFDocument } from 'pdf-lib';\r\nimport FileSaver from 'file-saver';\r\n\r\nconst fillForm = async (props) => {\r\n    // let fileReader = new FileReader();\r\n    const url = props.pdf;\r\n    const formPdfBytes = await fetch(url)\r\n    //{headers:{'Content-Type':'application/pdf'}}\r\n        .then(res => {\r\n            console.log(res.headers)\r\n            return (res.arrayBuffer())})\r\n    // fileReader.onload = function(e) {\r\n    //     // The file's text will be printed here\r\n    //     console.log(e.target.result)\r\n    //   };\r\n    console.log(formPdfBytes)\r\n    const pdfDoc = await PDFDocument.load(formPdfBytes);\r\n\r\n    const form = pdfDoc.getForm();\r\n   \r\n    const pdfBytes = await pdfDoc.save();\r\n\r\n    FileSaver.saveAs(pdfBytes, \"./pdf-lib_form_creation_example.pdf\", \"application/pdf\");\r\n}\r\n\r\nconst SavePDF  = (props) => {\r\n    return (<button onclick={fillForm(props)}>Fill PDF</button>);\r\n}\r\n\r\nexport default SavePDF;"]},"metadata":{},"sourceType":"module"}