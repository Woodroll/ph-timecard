{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\ph-timecard\\\\ph-timecard\\\\my-app\\\\src\\\\componets\\\\DayInputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DateFns from 'date-fns';\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\nimport TimePicker from '@material-ui/lab/TimePicker';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DayInputs(props) {\n  _s();\n\n  const {\n    daysOBJ,\n    setDays,\n    abvList\n  } = props;\n  console.log(daysOBJ);\n\n  function hoursList(abv) {\n    return [daysOBJ[`${abv}In`], daysOBJ[`${abv}Out`], daysOBJ[`${abv}In_2`], daysOBJ[`${abv}Out_2`], daysOBJ[`${abv}In_3`], daysOBJ[`${abv}Out_3`], daysOBJ[`${abv}In_4`], daysOBJ[`${abv}Out_4`]];\n  }\n\n  function calcDayHours(abv) {\n    let total = 0;\n\n    if (daysOBJ[`${abv}In`] !== undefined && daysOBJ[`${abv}Out`] !== undefined) {\n      console.log(\"It was all true!\");\n      total = daysOBJ[`${abv}Out`] - daysOBJ[`${abv}In`];\n    }\n\n    console.log(daysOBJ[`${abv}In`]);\n  }\n\n  useEffect(() => {\n    calcDayHours(\"MON\");\n  }, [hoursList(\"MON\")]);\n\n  function handleChange(e, i) {\n    e.persist();\n    console.log(\"error:\", e.target);\n    setDays(prevDays => ({ ...prevDays,\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  function getTimeInput(abv, end) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        variant: \"outlined\",\n        fullWidth: true,\n        id: `${abv}Type Reg Vac Sick Pers Hol${end}`,\n        label: \"Type\",\n        name: `${abv}Type Reg Vac Sick Pers Hol${end}`,\n        value: daysOBJ[`${abv}Type Reg Vac Sick Pers Hol${end}`],\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Reg\",\n          children: \"Reg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Vac\",\n          children: \"Vac\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Sick\",\n          children: \"Sick\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Pers\",\n          children: \"Pers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Hol\",\n          children: \"Hol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n        label: \"In\",\n        value: daysOBJ[`${abv}In_${end}`],\n        onChange: newValue => {\n          console.log(newValue);\n          setDays(prevDays => ({ ...prevDays,\n            [`${abv}In_${end}`]: newValue\n          }));\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n        label: \"Out\",\n        value: daysOBJ[`${abv}Out${end}`],\n        onChange: newValue => {\n          console.log(newValue);\n          setDays(prevDays => ({ ...prevDays,\n            [`${abv}Out${end}`]: newValue\n          }));\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDateFns,\n      children: abvList.map((abv, i) => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [abv, \"-\", daysOBJ[`${abv}Date_es_:date`]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), getTimeInput(abv, \"\"), getTimeInput(abv, \"_2\"), getTimeInput(abv, \"_3\"), getTimeInput(abv, \"_4\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 13\n  }, this);\n}\n\n_s(DayInputs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DayInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayInputs\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/componets/DayInputs.js"],"names":["React","useEffect","Select","Grid","MenuItem","DateFns","AdapterDateFns","LocalizationProvider","TimePicker","TextField","DayInputs","props","daysOBJ","setDays","abvList","console","log","hoursList","abv","calcDayHours","total","undefined","handleChange","e","i","persist","target","prevDays","name","value","getTimeInput","end","newValue","params","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACrC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAA8BH,KAApC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AAEA,WAASK,SAAT,CAAmBC,GAAnB,EAAwB;AACpB,WAAO,CAACN,OAAO,CAAE,GAAEM,GAAI,IAAR,CAAR,EAAsBN,OAAO,CAAE,GAAEM,GAAI,KAAR,CAA7B,EACPN,OAAO,CAAE,GAAEM,GAAI,MAAR,CADA,EACgBN,OAAO,CAAE,GAAEM,GAAI,OAAR,CADvB,EAEPN,OAAO,CAAE,GAAEM,GAAI,MAAR,CAFA,EAEgBN,OAAO,CAAE,GAAEM,GAAI,OAAR,CAFvB,EAGPN,OAAO,CAAE,GAAEM,GAAI,MAAR,CAHA,EAGgBN,OAAO,CAAE,GAAEM,GAAI,OAAR,CAHvB,CAAP;AAKH;;AAED,WAASC,YAAT,CAAsBD,GAAtB,EAA2B;AACvB,QAAIE,KAAK,GAAG,CAAZ;;AACA,QAAIR,OAAO,CAAE,GAAEM,GAAI,IAAR,CAAP,KAAuBG,SAAvB,IAAoCT,OAAO,CAAE,GAAEM,GAAI,KAAR,CAAP,KAAyBG,SAAjE,EAA4E;AACxEN,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAI,MAAAA,KAAK,GAAGR,OAAO,CAAE,GAAEM,GAAI,KAAR,CAAP,GAAuBN,OAAO,CAAE,GAAEM,GAAI,IAAR,CAAtC;AACH;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAAE,GAAEM,GAAI,IAAR,CAAnB;AACH;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AAACkB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAAoB,GAA5B,EAA8B,CAACF,SAAS,CAAC,KAAD,CAAV,CAA9B,CAAT;;AAEA,WAASK,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;AACxBD,IAAAA,CAAC,CAACE,OAAF;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBO,CAAC,CAACG,MAAxB;AACAb,IAAAA,OAAO,CAACc,QAAQ,KAAK,EAAC,GAAGA,QAAJ;AAAc,OAACJ,CAAC,CAACG,MAAF,CAASE,IAAV,GAAiBL,CAAC,CAACG,MAAF,CAASG;AAAxC,KAAL,CAAT,CAAP;AACH;;AAGD,WAASC,YAAT,CAAsBZ,GAAtB,EAA2Ba,GAA3B,EAA+B;AAC3B,wBAAO;AAAA,8BACH,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,UADZ;AAEI,QAAA,SAAS,MAFb;AAGI,QAAA,EAAE,EAAG,GAAEb,GAAI,6BAA4Ba,GAAI,EAH/C;AAII,QAAA,KAAK,EAAC,MAJV;AAKI,QAAA,IAAI,EAAG,GAAEb,GAAI,6BAA4Ba,GAAI,EALjD;AAMI,QAAA,KAAK,EAAEnB,OAAO,CAAE,GAAEM,GAAI,6BAA4Ba,GAAI,EAAxC,CANlB;AAOI,QAAA,QAAQ,EAAET,YAPd;AAAA,gCASI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAiBH,QAAC,UAAD;AACI,QAAA,KAAK,EAAC,IADV;AAEI,QAAA,KAAK,EAAEV,OAAO,CAAE,GAAEM,GAAI,MAAKa,GAAI,EAAjB,CAFlB;AAGI,QAAA,QAAQ,EAAGC,QAAD,IAAc;AACxBjB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACAnB,UAAAA,OAAO,CAACc,QAAQ,KAAK,EAAC,GAAGA,QAAJ;AAAc,aAAE,GAAET,GAAI,MAAKa,GAAI,EAAjB,GAAqBC;AAAnC,WAAL,CAAT,CAAP;AACH,SAND;AAOA,QAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAPzB;AAAA;AAAA;AAAA;AAAA,cAjBG,eA2BH,QAAC,UAAD;AACI,QAAA,KAAK,EAAC,KADV;AAEI,QAAA,KAAK,EAAErB,OAAO,CAAE,GAAEM,GAAI,MAAKa,GAAI,EAAjB,CAFlB;AAGI,QAAA,QAAQ,EAAGC,QAAD,IAAc;AACxBjB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACAnB,UAAAA,OAAO,CAACc,QAAQ,KAAK,EAAC,GAAGA,QAAJ;AAAc,aAAE,GAAET,GAAI,MAAKa,GAAI,EAAjB,GAAqBC;AAAnC,WAAL,CAAT,CAAP;AACH,SAND;AAOA,QAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAPzB;AAAA;AAAA;AAAA;AAAA,cA3BG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAuCH;;AAGD,sBAAQ;AAAA,2BAAK,QAAC,oBAAD;AAAsB,MAAA,WAAW,EAAE3B,cAAnC;AAAA,gBACJQ,OAAO,CAACoB,GAAR,CAAY,CAAChB,GAAD,EAAMM,CAAN,KAAY;AACrB,4BAAO,QAAC,IAAD;AAAA,kCACH;AAAA,uBAAIN,GAAJ,OAAUN,OAAO,CAAE,GAAEM,GAAI,eAAR,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,EAEFY,YAAY,CAACZ,GAAD,EAAM,EAAN,CAFV,EAGFY,YAAY,CAACZ,GAAD,EAAM,IAAN,CAHV,EAIFY,YAAY,CAACZ,GAAD,EAAM,IAAN,CAJV,EAKFY,YAAY,CAACZ,GAAD,EAAM,IAAN,CALV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAOH,OARA;AADI;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAR;AAWH;;GArFuBR,S;;KAAAA,S","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DateFns from 'date-fns';\r\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\r\nimport TimePicker from '@material-ui/lab/TimePicker';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function DayInputs(props) {\r\n    const {daysOBJ, setDays, abvList} = props\r\n\r\n    console.log(daysOBJ);\r\n\r\n    function hoursList(abv) {\r\n        return [daysOBJ[`${abv}In`], daysOBJ[`${abv}Out`],\r\n        daysOBJ[`${abv}In_2`], daysOBJ[`${abv}Out_2`],\r\n        daysOBJ[`${abv}In_3`], daysOBJ[`${abv}Out_3`],\r\n        daysOBJ[`${abv}In_4`], daysOBJ[`${abv}Out_4`],\r\n        ]\r\n    }\r\n\r\n    function calcDayHours(abv) {\r\n        let total = 0\r\n        if (daysOBJ[`${abv}In`] !==undefined && daysOBJ[`${abv}Out`] !== undefined) {\r\n            console.log(\"It was all true!\")\r\n            total = daysOBJ[`${abv}Out`] - daysOBJ[`${abv}In`]\r\n        }\r\n        console.log(daysOBJ[`${abv}In`]);\r\n    }\r\n\r\n    useEffect(() => {calcDayHours(\"MON\")}, [hoursList(\"MON\")]);\r\n\r\n    function handleChange(e, i) {\r\n        e.persist();\r\n        console.log(\"error:\", e.target);\r\n        setDays(prevDays => ({...prevDays, [e.target.name]: e.target.value }));\r\n    }\r\n\r\n\r\n    function getTimeInput(abv, end){\r\n        return(<div>\r\n            <Select\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                label=\"Type\"\r\n                name={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                value={daysOBJ[`${abv}Type Reg Vac Sick Pers Hol${end}`]}\r\n                onChange={handleChange}\r\n            >\r\n                <MenuItem value={\"Reg\"}>Reg</MenuItem>\r\n                <MenuItem value={\"Vac\"}>Vac</MenuItem>\r\n                <MenuItem value={\"Sick\"}>Sick</MenuItem>\r\n                <MenuItem value={\"Pers\"}>Pers</MenuItem>\r\n                <MenuItem value={\"Hol\"}>Hol</MenuItem>\r\n            </Select>\r\n\r\n            <TimePicker\r\n                label=\"In\"\r\n                value={daysOBJ[`${abv}In_${end}`]}\r\n                onChange={(newValue) => {\r\n                console.log(newValue)    \r\n                setDays(prevDays => ({...prevDays, [`${abv}In_${end}`]: newValue}));\r\n            }}\r\n            renderInput={(params) => <TextField {...params} />}\r\n            />\r\n\r\n            <TimePicker\r\n                label=\"Out\"\r\n                value={daysOBJ[`${abv}Out${end}`]}\r\n                onChange={(newValue) => {\r\n                console.log(newValue)    \r\n                setDays(prevDays => ({...prevDays, [`${abv}Out${end}`]: newValue}));\r\n            }}\r\n            renderInput={(params) => <TextField {...params} />}\r\n            />\r\n\r\n        </div>            \r\n        )\r\n    }\r\n\r\n\r\n    return (<div><LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            {abvList.map((abv, i) => {\r\n                return(<Grid>\r\n                    <p>{abv}-{daysOBJ[`${abv}Date_es_:date`]}</p>\r\n                    {getTimeInput(abv, \"\")}\r\n                    {getTimeInput(abv, \"_2\")}\r\n                    {getTimeInput(abv, \"_3\")}\r\n                    {getTimeInput(abv, \"_4\")}\r\n                </Grid>)\r\n            })}  \r\n            </LocalizationProvider></div>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}