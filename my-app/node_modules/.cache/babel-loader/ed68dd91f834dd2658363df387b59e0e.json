{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\ph-timecard\\\\ph-timecard\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport formPDF from './fillable.pdf';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport Days from './classes/Days';\nimport { StyledEngineProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'; // import RestoreIcon from '@material-ui/icons/Restore';\n// import ArchiveIcon from '@material-ui/icons/Archive';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const abvList = [\"MON\", \"TUE\", \"WED\", \"THUR\", \"FRI\", \"SAT\", \"SUN\"];\n  const [daysOBJ, setDays] = useState(new Days(abvList));\n  const [timeCard, setTimeCard] = useState({\n    \"Name\": undefined,\n    \"Position\": undefined,\n    \"Pay Week Ending\": undefined\n  });\n\n  function setDatesOfTheWeek(inDate) {\n    abvList.forEach((abv, i) => {\n      const dateSunday = new Date(Date.parse(`${inDate}T00:00:00`));\n      const date = new Date(dateSunday.setDate(dateSunday.getDate() - (6 - i)));\n      const formatedDate = `${date.getMonth() + 1}/${date.getDate()}`;\n      console.log(`i:${i}, date:${date}, fd:${formatedDate}`);\n      setDays(prevDays => ({ ...prevDays,\n        [`${abv}Date_es_:date`]: formatedDate\n      }));\n    });\n  }\n\n  function calWeekHours() {\n    let total = 0;\n    abvList.forEach(abv => {\n      if (daysOBJ[`${abv}HOURS WORKED`]) {\n        total += Number(daysOBJ[`${abv}HOURS WORKED`]);\n      }\n    });\n    console.log(\"week total:\", total);\n    setDays(prevDays => ({ ...prevDays,\n      \"GRAND TOTALHOURS WORKED\": total.toString()\n    }));\n  }\n\n  useEffect(() => {\n    // getPDF()\n    const data = localStorage.getItem(\"my-time-card\");\n\n    if (data) {\n      setTimeCard(JSON.parse(data));\n    }\n\n    ;\n    const daysData = localStorage.getItem(\"my-days\");\n\n    if (daysData) {\n      setDays(JSON.parse(daysData));\n    }\n\n    ;\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard));\n    localStorage.setItem(\"my-days\", JSON.stringify(daysOBJ));\n  });\n  return /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n    injectFirst: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(SavePDF, {\n          pdf: formPDF,\n          timeCard: timeCard,\n          daysOBJ: daysOBJ\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          timeCard: timeCard,\n          setTimeCard: setTimeCard,\n          daysOBJ: daysOBJ,\n          setDays: setDays,\n          abvList: abvList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0\n          },\n          elevation: 1,\n          children: /*#__PURE__*/_jsxDEV(BottomNavigation, {\n            showLabels: true // value={value}\n            // onChange={(event, newValue) => {\n            //     setValue(newValue);\n            // }}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n              label: daysOBJ[\"GRAND TOTALHOURS WORKED\"] ? `  TOTAL HOURS:${daysOBJ[\"GRAND TOTALHOURS WORKED\"]}` : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(SavePDF, {\n              pdf: formPDF,\n              timeCard: timeCard,\n              daysOBJ: daysOBJ\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"D4+shfRjjloOzn67dn8tHewJoFw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/App.js"],"names":["formPDF","React","useState","useEffect","SavePDF","Form","Days","StyledEngineProvider","Paper","BottomNavigation","BottomNavigationAction","App","abvList","daysOBJ","setDays","timeCard","setTimeCard","undefined","setDatesOfTheWeek","inDate","forEach","abv","i","dateSunday","Date","parse","date","setDate","getDate","formatedDate","getMonth","console","log","prevDays","calWeekHours","total","Number","toString","data","localStorage","getItem","JSON","daysData","setItem","stringify","position","bottom","left","right"],"mappings":"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","sourcesContent":["import formPDF from './fillable.pdf';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport Days from './classes/Days'\nimport { StyledEngineProvider } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\n// import RestoreIcon from '@material-ui/icons/Restore';\n// import ArchiveIcon from '@material-ui/icons/Archive';\n\n\nfunction App() {\n\n  const abvList = [\"MON\", \"TUE\", \"WED\", \"THUR\", \"FRI\", \"SAT\", \"SUN\"]\n  const [daysOBJ, setDays] = useState(new Days(abvList))\n  \n  const [timeCard, setTimeCard] = useState({\n    \"Name\" : undefined,\n    \"Position\": undefined,\n    \"Pay Week Ending\": undefined,\n  });\n  \n  function setDatesOfTheWeek(inDate){\n    abvList.forEach((abv, i)=>{\n    const dateSunday = new Date(Date.parse(`${inDate}T00:00:00`));             \n    const date = new Date(dateSunday.setDate(dateSunday.getDate() - (6 - i)))\n    const formatedDate = `${date.getMonth()+1}/${date.getDate()}`\n    console.log(`i:${i}, date:${date}, fd:${formatedDate}`)\n   \n    setDays(prevDays => ({...prevDays, [`${abv}Date_es_:date`]  : formatedDate})) \n    })\n  }\n\n  function calWeekHours() {\n    let total = 0\n    abvList.forEach(abv => {if(daysOBJ[`${abv}HOURS WORKED`]) {total += Number(daysOBJ[`${abv}HOURS WORKED`])}});\n    console.log(\"week total:\", total)\n    setDays(prevDays => ({...prevDays, \"GRAND TOTALHOURS WORKED\" : total.toString() }));\n  }\n\n  useEffect(() => {\n    // getPDF()\n    const data = localStorage.getItem(\"my-time-card\"); \n    if (data) {\n      setTimeCard(JSON.parse(data))\n    };\n    \n    const daysData = localStorage.getItem(\"my-days\"); \n    if (daysData) {\n        setDays(JSON.parse(daysData))\n    };\n\n    }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard))\n    localStorage.setItem(\"my-days\", JSON.stringify(daysOBJ))\n  })\n\n  return (\n    <StyledEngineProvider injectFirst>\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <SavePDF \n          pdf={formPDF}\n          timeCard={timeCard}\n          daysOBJ={daysOBJ}\n          />\n        <Form\n        timeCard = {timeCard}\n        setTimeCard = {setTimeCard}\n        daysOBJ={daysOBJ}\n        setDays={setDays}\n        abvList={abvList}\n        />\n\n        <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={1}>\n          <BottomNavigation\n                showLabels\n                // value={value}\n                // onChange={(event, newValue) => {\n                //     setValue(newValue);\n                // }}\n            >\n            <BottomNavigationAction label={daysOBJ[\"GRAND TOTALHOURS WORKED\"]?`  TOTAL HOURS:${daysOBJ[\"GRAND TOTALHOURS WORKED\"]}`:\"\"} />\n            <SavePDF \n              pdf={formPDF}\n              timeCard={timeCard}\n              daysOBJ={daysOBJ}\n            />\n            {/* <BottomNavigationAction label=\"Archive\" icon={<ArchiveIcon />} /> */}\n          </BottomNavigation>\n        </Paper>\n\n\n\n      </div>  \n    </div>\n    </StyledEngineProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}