{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\ph-timecard\\\\ph-timecard\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport formPDF from './fillable.pdf';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport { PDFDocument } from 'pdf-lib'; // var FileSaver = require('file-saver');\n// var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\n// FileSaver.saveAs(blob, \"hello world.txt\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [updatedPDF, setUpdatedPDF] = useState(0);\n  const [form, setForm] = useState();\n  const [timeCard, setTimeCard] = useState();\n\n  async function getPDF() {\n    const url = updatedPDF;\n    const formPdfBytes = await fetch(url, {\n      headers: {\n        'Content-Type': 'application/pdf'\n      }\n    }).then(res => {\n      return res.arrayBuffer();\n    });\n    const pdfDoc = await PDFDocument.load(formPdfBytes);\n    setForm(pdfDoc.getForm());\n    const feildNames = form.getFields().map(f => f.getName());\n    setTimeCard(prevTC => {\n      feildNames.forEach(name => ({ ...prevTC,\n        [name]: undefined\n      }));\n    });\n    console.log(timeCard);\n  } // const [timeCard, setTimeCard] = useState({\n  //   \"Name\" : undefined,\n  //   \"Position\": undefined,\n  //   \"Pay Week Ending\": undefined,\n  // });\n\n\n  useEffect(() => {\n    getPDF();\n    const data = localStorage.getItem(\"my-time-card\");\n\n    if (data) {\n      setTimeCard(JSON.parse(data));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SavePDF, {\n        pdf: formPDF,\n        updatedPDF: updatedPDF,\n        setUpdatedPDF: setUpdatedPDF,\n        timeCard: timeCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        timeCard: timeCard,\n        setTimeCard: setTimeCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FzG9m1Hq8F40iCzRebqKwbGYR/I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/App.js"],"names":["formPDF","React","useState","useEffect","SavePDF","Form","PDFDocument","App","updatedPDF","setUpdatedPDF","form","setForm","timeCard","setTimeCard","getPDF","url","formPdfBytes","fetch","headers","then","res","arrayBuffer","pdfDoc","load","getForm","feildNames","getFields","map","f","getName","prevTC","forEach","name","undefined","console","log","data","localStorage","getItem","JSON","parse","setItem","stringify","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport formPDF from './fillable.pdf';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport { PDFDocument } from 'pdf-lib';\n\n// var FileSaver = require('file-saver');\n// var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\n// FileSaver.saveAs(blob, \"hello world.txt\");\n\nfunction App() {\n  const [updatedPDF, setUpdatedPDF] = useState(0);\n\n  const [form, setForm] = useState();\n  const [timeCard, setTimeCard] = useState();\n  \n  async function getPDF () {const url = updatedPDF;\n    const formPdfBytes = await fetch(url,\n      {headers:{'Content-Type':'application/pdf'}})\n        .then(res => {return (res.arrayBuffer())})\n      \n    const pdfDoc = await PDFDocument.load(formPdfBytes);\n    setForm(pdfDoc.getForm())\n    const feildNames = form.getFields().map(f => f.getName());\n    setTimeCard(prevTC => {feildNames.forEach(name => ({...prevTC, [name] : undefined}))});\n    console.log(timeCard)\n    } \n\n  // const [timeCard, setTimeCard] = useState({\n  //   \"Name\" : undefined,\n  //   \"Position\": undefined,\n  //   \"Pay Week Ending\": undefined,\n  // });\n\n  useEffect(() => {\n    getPDF()\n    const data = localStorage.getItem(\"my-time-card\"); \n    if (data) {\n      setTimeCard(JSON.parse(data))\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard))\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <SavePDF \n          pdf={formPDF}\n          updatedPDF={updatedPDF}\n          setUpdatedPDF={setUpdatedPDF}\n          timeCard={timeCard}\n          />\n        <Form\n        timeCard = {timeCard}\n        setTimeCard = {setTimeCard}\n        />\n      </header>  \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}