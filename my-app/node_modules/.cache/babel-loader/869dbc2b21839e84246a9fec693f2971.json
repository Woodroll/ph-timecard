{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\ph-timecard\\\\ph-timecard\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport formPDF from './fillable.pdf';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto'; // var FileSaver = require('file-saver');\n// var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\n// FileSaver.saveAs(blob, \"hello world.txt\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [updatedPDF, setUpdatedPDF] = useState(0);\n  const [timeCard, setTimeCard] = useState({\n    \"Name\": null,\n    \"Position\": null,\n    \"Pay Week Ending\": null\n  });\n  useEffect(() => {\n    const data = localStorage.getItem(\"my-time-card\");\n\n    if (data) {\n      setTimeCard(JSON.parse(data));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SavePDF, {\n        pdf: formPDF,\n        updatedPDF: updatedPDF,\n        setUpdatedPDF: setUpdatedPDF,\n        timeCard: timeCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        timeCard: timeCard,\n        setTimeCard: setTimeCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mzhMvrSM2XaN5V8frQRrkpW+Ucw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/App.js"],"names":["formPDF","React","useState","useEffect","SavePDF","Form","App","updatedPDF","setUpdatedPDF","timeCard","setTimeCard","data","localStorage","getItem","JSON","parse","setItem","stringify","logo"],"mappings":";;;;AACA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,oBAAP,C,CAEA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACvC,YAAS,IAD8B;AAEvC,gBAAY,IAF2B;AAGvC,uBAAmB;AAHoB,GAAD,CAAxC;AAOAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;;AACA,QAAIF,IAAJ,EAAU;AACRD,MAAAA,WAAW,CAACI,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAD,CAAX;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACI,OAAb,CAAqB,cAArB,EAAqCF,IAAI,CAACG,SAAL,CAAeR,QAAf,CAArC;AACD,GAFQ,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAES,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,OAAD;AACE,QAAA,GAAG,EAAElB,OADP;AAEE,QAAA,UAAU,EAAEO,UAFd;AAGE,QAAA,aAAa,EAAEC,aAHjB;AAIE,QAAA,QAAQ,EAAEC;AAJZ;AAAA;AAAA;AAAA;AAAA,cALF,eAWE,QAAC,IAAD;AACA,QAAA,QAAQ,EAAIA,QADZ;AAEA,QAAA,WAAW,EAAIC;AAFf;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAxCQJ,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport formPDF from './fillable.pdf';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\n\n// var FileSaver = require('file-saver');\n// var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\n// FileSaver.saveAs(blob, \"hello world.txt\");\n\nfunction App() {\n  const [updatedPDF, setUpdatedPDF] = useState(0);\n  const [timeCard, setTimeCard] = useState({\n    \"Name\" : null,\n    \"Position\": null,\n    \"Pay Week Ending\": null,\n\n  });\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"my-time-card\"); \n    if (data) {\n      setTimeCard(JSON.parse(data))\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard))\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <SavePDF \n          pdf={formPDF}\n          updatedPDF={updatedPDF}\n          setUpdatedPDF={setUpdatedPDF}\n          timeCard={timeCard}\n          />\n        <Form\n        timeCard = {timeCard}\n        setTimeCard = {setTimeCard}\n        />\n      </header>  \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}