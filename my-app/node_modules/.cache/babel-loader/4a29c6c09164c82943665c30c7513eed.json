{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\ph-timecard\\\\ph-timecard\\\\my-app\\\\src\\\\componets\\\\DayInputs.js\";\nimport React, { useEffect } from 'react';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DateFns from 'date-fns';\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\nimport TimePicker from '@material-ui/lab/TimePicker';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DayInputs(props) {\n  const {\n    daysOBJ,\n    setDays,\n    abvList\n  } = props;\n  console.log(daysOBJ);\n\n  function parseTime(time) {\n    return Number(time.slice(0, 2)) + Math.round(time.slice(3, 5)) / 15 * 25 * .01;\n  }\n\n  function calWeekHours() {\n    let total = 0;\n    abvList.forEach(abv => {\n      if (daysOBJ[`${abv}HOURS WORKED`]) {\n        total += Number(daysOBJ[`${abv}HOURS WORKED`]);\n      }\n    });\n    console.log(\"week total:\", total);\n    setDays(prevDays => ({ ...prevDays,\n      [\"GRAND TOTALHOURS WORKED\"]: total.toString()\n    }));\n  }\n\n  const totals = [daysOBJ[\"MONHOURS WORKED\"], daysOBJ[\"TUEHOURS WORKED\"], daysOBJ[\"WEDHOURS WORKED\"], daysOBJ[\"THURHOURS WORKED\"], daysOBJ[\"FRIHOURS WORKED\"], daysOBJ[\"SATHOURS WORKED\"], daysOBJ[\"SUNHOURS WORKED\"]]; // useEffect(() => {calWeekHours()}, [totals])\n\n  function calcDayHours(abv) {\n    console.log(\"Calc Ran!!!\", abv);\n    let total = 0;\n\n    if (daysOBJ[`${abv}In`] && daysOBJ[`${abv}Out`]) {\n      total = parseTime(daysOBJ[`${abv}Out`]) - parseTime(daysOBJ[`${abv}In`]);\n\n      if (daysOBJ[`${abv}In_2`] && daysOBJ[`${abv}Out_2`]) {\n        total += parseTime(daysOBJ[`${abv}Out_2`]) - parseTime(daysOBJ[`${abv}In_2`]);\n\n        if (daysOBJ[`${abv}In_3`] && daysOBJ[`${abv}Out_3`]) {\n          total += parseTime(daysOBJ[`${abv}Out_3`]) - parseTime(daysOBJ[`${abv}In_3`]);\n\n          if (daysOBJ[`${abv}In_4`] && daysOBJ[`${abv}Out_4`]) {\n            total += parseTime(daysOBJ[`${abv}Out_4`]) - parseTime(daysOBJ[`${abv}In_4`]);\n          }\n        }\n      }\n    }\n\n    setDays(prevDays => ({ ...prevDays,\n      [`${abv}HOURS WORKED`]: total.toString()\n    }));\n    console.log(\"total:\", total);\n  }\n\n  function handleChange(e) {\n    //e.persist();\n    setDays(prevDays => ({ ...prevDays,\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  function getTimeInput(abv, end) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      name: abv,\n      id: abv,\n      onClick: e => {\n        calcDayHours(abv);\n      },\n      onBlur: e => {\n        calcDayHours(abv);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        variant: \"outlined\",\n        fullWidth: true,\n        id: `${abv}Type Reg Vac Sick Pers Hol${end}`,\n        label: \"Type\",\n        name: `${abv}Type Reg Vac Sick Pers Hol${end}`,\n        value: daysOBJ[`${abv}Type Reg Vac Sick Pers Hol${end}`],\n        onChange: e => {\n          handleChange(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Reg\",\n          children: \"Reg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Vac\",\n          children: \"Vac\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Sick\",\n          children: \"Sick\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Pers\",\n          children: \"Pers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Hol\",\n          children: \"Hol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"In\",\n        type: \"time\",\n        fullWidth: true,\n        name: `${abv}In${end}`,\n        value: daysOBJ[`${abv}In${end}`],\n        onChange: handleChange,\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          step: 1500 // 15 min\n\n        } // sx={{ width: 150 }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Out\",\n        type: \"time\",\n        fullWidth: true,\n        name: `${abv}Out${end}`,\n        value: daysOBJ[`${abv}Out${end}`],\n        onChange: e => {\n          handleChange(e);\n        },\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          step: 1500 // 15 min\n\n        } // sx={{ width: 150 }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    alignItems: \"center\",\n    children: abvList.map((abv, i) => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12 / 7,\n        Container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [abv, \" - \", daysOBJ[`${abv}Date_es_:date`], daysOBJ[`${abv}HOURS WORKED`] ? \" - \" + daysOBJ[`${abv}HOURS WORKED`] + \" hrs.\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), getTimeInput(abv, \"\"), getTimeInput(abv, \"_2\"), getTimeInput(abv, \"_3\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 13\n  }, this);\n}\n_c = DayInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayInputs\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/componets/DayInputs.js"],"names":["React","useEffect","Select","Grid","MenuItem","DateFns","AdapterDateFns","LocalizationProvider","TimePicker","TextField","DayInputs","props","daysOBJ","setDays","abvList","console","log","parseTime","time","Number","slice","Math","round","calWeekHours","total","forEach","abv","prevDays","toString","totals","calcDayHours","handleChange","e","target","name","value","getTimeInput","end","shrink","step","map","i"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DateFns from 'date-fns';\r\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\r\nimport TimePicker from '@material-ui/lab/TimePicker';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function DayInputs(props) {\r\n    const {daysOBJ, setDays, abvList} = props\r\n\r\n    console.log(daysOBJ);\r\n\r\n    function parseTime(time){\r\n        return Number(time.slice(0,2)) + (Math.round(time.slice(3,5))/15)*25*.01\r\n    }\r\n\r\n    function calWeekHours() {\r\n        let total = 0\r\n        abvList.forEach(abv => {if(daysOBJ[`${abv}HOURS WORKED`]) {total += Number(daysOBJ[`${abv}HOURS WORKED`])}});\r\n        console.log(\"week total:\", total)\r\n        setDays(prevDays => ({...prevDays, [\"GRAND TOTALHOURS WORKED\"]: total.toString() }));\r\n    }\r\n\r\n    const totals = [daysOBJ[\"MONHOURS WORKED\"], daysOBJ[\"TUEHOURS WORKED\"],daysOBJ[\"WEDHOURS WORKED\"],\r\n    daysOBJ[\"THURHOURS WORKED\"], daysOBJ[\"FRIHOURS WORKED\"], daysOBJ[\"SATHOURS WORKED\"], daysOBJ[\"SUNHOURS WORKED\"],]\r\n    // useEffect(() => {calWeekHours()}, [totals])\r\n\r\n    function calcDayHours(abv) {\r\n        console.log(\"Calc Ran!!!\", abv)\r\n        let total = 0\r\n        if (daysOBJ[`${abv}In`] && daysOBJ[`${abv}Out`]) {\r\n            total = parseTime(daysOBJ[`${abv}Out`]) - parseTime(daysOBJ[`${abv}In`])\r\n            if (daysOBJ[`${abv}In_2`] && daysOBJ[`${abv}Out_2`]) {\r\n                total += parseTime(daysOBJ[`${abv}Out_2`]) - parseTime(daysOBJ[`${abv}In_2`])\r\n                if (daysOBJ[`${abv}In_3`] && daysOBJ[`${abv}Out_3`]) {\r\n                    total += parseTime(daysOBJ[`${abv}Out_3`]) - parseTime(daysOBJ[`${abv}In_3`])\r\n                    if (daysOBJ[`${abv}In_4`] && daysOBJ[`${abv}Out_4`]) {\r\n                        total += parseTime(daysOBJ[`${abv}Out_4`]) - parseTime(daysOBJ[`${abv}In_4`])\r\n                    }\r\n                }\r\n            }        \r\n        }\r\n        setDays(prevDays => ({...prevDays, [`${abv}HOURS WORKED`]: total.toString() }));\r\n        console.log(\"total:\", total);\r\n    }\r\n\r\n    function handleChange(e) {\r\n        //e.persist();\r\n        setDays(prevDays => ({...prevDays, [e.target.name]: e.target.value }));\r\n    }\r\n\r\n\r\n    function getTimeInput(abv, end){\r\n        return(<Grid item name={abv} id={abv} onClick={e => {calcDayHours(abv)}} onBlur={e => {calcDayHours(abv)}}>\r\n            <Select\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                label=\"Type\"\r\n                name={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                value={daysOBJ[`${abv}Type Reg Vac Sick Pers Hol${end}`]}\r\n                onChange={e => {handleChange(e)}}\r\n            >\r\n                <MenuItem value={\"Reg\"}>Reg</MenuItem>\r\n                <MenuItem value={\"Vac\"}>Vac</MenuItem>\r\n                <MenuItem value={\"Sick\"}>Sick</MenuItem>\r\n                <MenuItem value={\"Pers\"}>Pers</MenuItem>\r\n                <MenuItem value={\"Hol\"}>Hol</MenuItem>\r\n            </Select>\r\n\r\n            <TextField\r\n                label=\"In\"\r\n                type=\"time\"\r\n                fullWidth\r\n                name={`${abv}In${end}`}\r\n                value={daysOBJ[`${abv}In${end}`]}\r\n                onChange={handleChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 1500, // 15 min\r\n                }}\r\n                // sx={{ width: 150 }}\r\n            />\r\n            \r\n            <TextField\r\n                label=\"Out\"\r\n                type=\"time\"\r\n                fullWidth\r\n                name={`${abv}Out${end}`}\r\n                value={daysOBJ[`${abv}Out${end}`]}\r\n                onChange={e => {handleChange(e)}}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 1500, // 15 min\r\n                }}\r\n                // sx={{ width: 150 }}\r\n            />\r\n        </Grid>            \r\n        )\r\n    }\r\n\r\n\r\n    return (<Grid item xs={12} container alignItems=\"center\">\r\n            {abvList.map((abv, i) => {\r\n                return(<Grid item sm={12/7} Container>\r\n                    <Grid item><p>{abv} - {daysOBJ[`${abv}Date_es_:date`]}{daysOBJ[`${abv}HOURS WORKED`]? \" - \" + daysOBJ[`${abv}HOURS WORKED`]+\" hrs.\":\"\"}</p></Grid>\r\n                    {getTimeInput(abv, \"\")}\r\n                    {getTimeInput(abv, \"_2\")}\r\n                    {getTimeInput(abv, \"_3\")}\r\n                </Grid>)\r\n            })}  \r\n            </Grid>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}