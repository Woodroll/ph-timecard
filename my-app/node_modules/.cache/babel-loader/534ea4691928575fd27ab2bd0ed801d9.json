{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\ph-timecard\\\\ph-timecard\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport formPDF from './fillable.pdf';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport { PDFDocument } from 'pdf-lib';\nimport Day from './classes/Day';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [updatedPDF, setUpdatedPDF] = useState(0);\n  const [form, setForm] = useState(); // const [timeCard, setTimeCard] = useState();\n  // async function getPDF () {\n  //   const url = formPDF;\n  //   const formPdfBytes = await fetch(url, {headers:{\"Content-Type\":\"application/pdf\"}})\n  //     .then(res => {return (res.arrayBuffer())});\n  //   const pdfDoc = await PDFDocument.load(formPdfBytes);\n  //   const pdfForm = await pdfDoc.getForm()\n  //   setForm(pdfForm)\n  //   console.log(pdfForm)\n  //   const feildNames = await pdfForm.getFields().map(f => f.getName());\n  //   setTimeCard(prevTC => {feildNames.forEach(name => ({...prevTC, [name] : undefined}))});\n  //   console.log(timeCard)\n  //   } \n\n  const [timeCard, setTimeCard] = useState({\n    \"Name\": undefined,\n    \"Position\": undefined,\n    \"Pay Week Ending\": undefined,\n    \"Days\": []\n  });\n  const myDay = new Day(\"SUN\", \"2021-07-04\");\n  myDay.num2 = 10;\n  console.log(`num 2:${myDay[\"num2\"]}, Hours worked: ${myDay.calcHours()}`);\n  const myDate = new Date(Date.parse(\"2021-07-04T00:00:00\"));\n  myDate.setDate(myDate.getDate() - 6);\n  console.log(myDate.toLocaleString('en-us', {\n    weekday: 'short'\n  }));\n  useEffect(() => {\n    // getPDF()\n    const data = localStorage.getItem(\"my-time-card\");\n\n    if (data) {\n      setTimeCard(JSON.parse(data));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SavePDF, {\n        pdf: formPDF,\n        updatedPDF: updatedPDF,\n        setUpdatedPDF: setUpdatedPDF,\n        timeCard: timeCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        timeCard: timeCard,\n        setTimeCard: setTimeCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wqy9BXvHWaUfSjiOl206kMN3FSY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/App.js"],"names":["formPDF","React","useState","useEffect","SavePDF","Form","PDFDocument","Day","App","updatedPDF","setUpdatedPDF","form","setForm","timeCard","setTimeCard","undefined","myDay","num2","console","log","calcHours","myDate","Date","parse","setDate","getDate","toLocaleString","weekday","data","localStorage","getItem","JSON","setItem","stringify","logo"],"mappings":";;;;AACA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,oBAAP;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,GAAP,MAAgB,eAAhB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC,CAHa,CAIb;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AACvC,YAASa,SAD8B;AAEvC,gBAAYA,SAF2B;AAGvC,uBAAmBA,SAHoB;AAIvC,YAAQ;AAJ+B,GAAD,CAAxC;AAMA,QAAMC,KAAK,GAAG,IAAIT,GAAJ,CAAQ,KAAR,EAAc,YAAd,CAAd;AACAS,EAAAA,KAAK,CAACC,IAAN,GAAa,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,SAAQH,KAAK,CAAC,MAAD,CAAS,mBAAkBA,KAAK,CAACI,SAAN,EAAkB,EAAvE;AACA,QAAMC,MAAM,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAW,qBAAX,CAAT,CAAf;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,OAAP,KAAmB,CAAlC;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACK,cAAP,CAAsB,OAAtB,EAA+B;AAAGC,IAAAA,OAAO,EAAE;AAAZ,GAA/B,CAAZ;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMyB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;;AACA,QAAIF,IAAJ,EAAU;AACRd,MAAAA,WAAW,CAACiB,IAAI,CAACR,KAAL,CAAWK,IAAX,CAAD,CAAX;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQAzB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,YAAY,CAACG,OAAb,CAAqB,cAArB,EAAqCD,IAAI,CAACE,SAAL,CAAepB,QAAf,CAArC;AACD,GAFQ,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEqB,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,OAAD;AACE,QAAA,GAAG,EAAElC,OADP;AAEE,QAAA,UAAU,EAAES,UAFd;AAGE,QAAA,aAAa,EAAEC,aAHjB;AAIE,QAAA,QAAQ,EAAEG;AAJZ;AAAA;AAAA;AAAA;AAAA,cALF,eAWE,QAAC,IAAD;AACA,QAAA,QAAQ,EAAIA,QADZ;AAEA,QAAA,WAAW,EAAIC;AAFf;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAjEQN,G;;KAAAA,G;AAmET,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport formPDF from './fillable.pdf';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport { PDFDocument } from 'pdf-lib';\nimport Day from './classes/Day'\n\nfunction App() {\n  const [updatedPDF, setUpdatedPDF] = useState(0);\n\n  const [form, setForm] = useState();\n  // const [timeCard, setTimeCard] = useState();\n  \n  // async function getPDF () {\n  //   const url = formPDF;\n  //   const formPdfBytes = await fetch(url, {headers:{\"Content-Type\":\"application/pdf\"}})\n  //     .then(res => {return (res.arrayBuffer())});\n      \n  //   const pdfDoc = await PDFDocument.load(formPdfBytes);\n  //   const pdfForm = await pdfDoc.getForm()\n  //   setForm(pdfForm)\n  //   console.log(pdfForm)\n  //   const feildNames = await pdfForm.getFields().map(f => f.getName());\n  //   setTimeCard(prevTC => {feildNames.forEach(name => ({...prevTC, [name] : undefined}))});\n  //   console.log(timeCard)\n  //   } \n\n  const [timeCard, setTimeCard] = useState({\n    \"Name\" : undefined,\n    \"Position\": undefined,\n    \"Pay Week Ending\": undefined,\n    \"Days\": [],\n  });\n  const myDay = new Day(\"SUN\",\"2021-07-04\")\n  myDay.num2 = 10\n  console.log(`num 2:${myDay[\"num2\"]}, Hours worked: ${myDay.calcHours()}`)\n  const myDate = new Date(Date.parse(\"2021-07-04T00:00:00\"))\n  myDate.setDate(myDate.getDate() - 6)\n  console.log(myDate.toLocaleString('en-us', {  weekday: 'short' }))\n  \n  useEffect(() => {\n    // getPDF()\n    const data = localStorage.getItem(\"my-time-card\"); \n    if (data) {\n      setTimeCard(JSON.parse(data))\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard))\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <SavePDF \n          pdf={formPDF}\n          updatedPDF={updatedPDF}\n          setUpdatedPDF={setUpdatedPDF}\n          timeCard={timeCard}\n          />\n        <Form\n        timeCard = {timeCard}\n        setTimeCard = {setTimeCard}\n        />\n      </header>  \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}