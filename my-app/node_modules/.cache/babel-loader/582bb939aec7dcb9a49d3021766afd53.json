{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\ph-timecard\\\\ph-timecard\\\\my-app\\\\src\\\\componets\\\\DayInputs.js\";\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Stack from '@material-ui/core/Stack';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DayInputs(props) {\n  const {\n    daysOBJ,\n    setDays,\n    abvList\n  } = props;\n  console.log(daysOBJ);\n\n  function DayColHead(props) {\n    const {\n      abv,\n      daysOBJ\n    } = props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        align: \"center\",\n        children: [abv, \" - \", daysOBJ[`${abv}Date_es_:date`]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: daysOBJ[`${abv}HOURS WORKED`] ? daysOBJ[`${abv}HOURS WORKED`] + \" hrs.\" : \" -- \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  function parseTime(time) {\n    console.log(Math.round(time.slice(3, 5) / 15) * 25 * .01);\n    return Number(time.slice(0, 2)) + Math.round(time.slice(3, 5) / 15) * 25 * .01;\n  }\n\n  function calWeekHours() {\n    let total = 0;\n    abvList.forEach(abv => {\n      if (daysOBJ[`${abv}HOURS WORKED`]) {\n        total += Number(daysOBJ[`${abv}HOURS WORKED`]);\n      }\n    });\n    console.log(\"week total:\", total);\n    setDays(prevDays => ({ ...prevDays,\n      [\"GRAND TOTALHOURS WORKED\"]: total.toString()\n    }));\n  } // const totals = [daysOBJ[\"MONHOURS WORKED\"], daysOBJ[\"TUEHOURS WORKED\"],daysOBJ[\"WEDHOURS WORKED\"],\n  // daysOBJ[\"THURHOURS WORKED\"], daysOBJ[\"FRIHOURS WORKED\"], daysOBJ[\"SATHOURS WORKED\"], daysOBJ[\"SUNHOURS WORKED\"],]\n\n\n  function calcDayHours(abv) {\n    console.log(\"Calc Ran!!!\", abv);\n    let total = 0;\n\n    if (daysOBJ[`${abv}In`] && daysOBJ[`${abv}Out`]) {\n      total = parseTime(daysOBJ[`${abv}Out`]) - parseTime(daysOBJ[`${abv}In`]);\n\n      if (daysOBJ[`${abv}In_2`] && daysOBJ[`${abv}Out_2`]) {\n        total += parseTime(daysOBJ[`${abv}Out_2`]) - parseTime(daysOBJ[`${abv}In_2`]);\n\n        if (daysOBJ[`${abv}In_3`] && daysOBJ[`${abv}Out_3`]) {\n          total += parseTime(daysOBJ[`${abv}Out_3`]) - parseTime(daysOBJ[`${abv}In_3`]);\n\n          if (daysOBJ[`${abv}In_4`] && daysOBJ[`${abv}Out_4`]) {\n            total += parseTime(daysOBJ[`${abv}Out_4`]) - parseTime(daysOBJ[`${abv}In_4`]);\n          }\n        }\n      }\n    }\n\n    setDays(prevDays => ({ ...prevDays,\n      [`${abv}HOURS WORKED`]: total.toString()\n    }));\n    console.log(\"total:\", total);\n    calWeekHours();\n  }\n\n  function handleChange(e) {\n    //e.persist();\n    setDays(prevDays => ({ ...prevDays,\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  function getTimeInput(abv, end, key) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      mt: 3,\n      name: abv,\n      id: abv,\n      onClick: e => {\n        calcDayHours(abv);\n        calWeekHours();\n      },\n      onBlur: e => {\n        calcDayHours(abv);\n        calWeekHours();\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          input: `${abv}Type Reg Vac Sick Pers Hol${end}`,\n          variant: \"outlined\",\n          fullWidth: true,\n          id: `${abv}Type Reg Vac Sick Pers Hol${end}`,\n          label: /*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 24\n          }, this),\n          name: `${abv}Type Reg Vac Sick Pers Hol${end}`,\n          value: daysOBJ[`${abv}Type Reg Vac Sick Pers Hol${end}`],\n          onChange: e => {\n            handleChange(e);\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Reg\",\n            children: \"Reg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Vac\",\n            children: \"Vac\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Sick\",\n            children: \"Sick\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Pers\",\n            children: \"Pers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Hol\",\n            children: \"Hol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"In\",\n          type: \"time\",\n          fullWidth: true,\n          name: `${abv}In${end}`,\n          value: daysOBJ[`${abv}In${end}`],\n          onChange: handleChange,\n          InputLabelProps: {\n            shrink: true\n          },\n          inputProps: {\n            step: 1500 // 15 min\n\n          } // sx={{ width: 150 }}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Out\",\n          type: \"time\",\n          fullWidth: true,\n          name: `${abv}Out${end}`,\n          value: daysOBJ[`${abv}Out${end}`],\n          onChange: e => {\n            handleChange(e);\n          },\n          InputLabelProps: {\n            shrink: true\n          },\n          inputProps: {\n            step: 1500 // 15 min\n\n          } // sx={{ width: 150 }}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    alignItems: \"center\",\n    children: abvList.map((abv, i) => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12 / 7,\n        container: true,\n        spacing: 0,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(DayColHead, {\n            abv: abv,\n            daysOBJ: daysOBJ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 13\n  }, this);\n}\n_c = DayInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayInputs\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/componets/DayInputs.js"],"names":["React","Select","Grid","Stack","MenuItem","TextField","Typography","InputLabel","FormControl","DayInputs","props","daysOBJ","setDays","abvList","console","log","DayColHead","abv","parseTime","time","Math","round","slice","Number","calWeekHours","total","forEach","prevDays","toString","calcDayHours","handleChange","e","target","name","value","getTimeInput","end","key","shrink","step","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Stack from '@material-ui/core/Stack';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function DayInputs(props) {\r\n    const {daysOBJ, setDays, abvList} = props\r\n\r\n    console.log(daysOBJ);\r\n\r\n    function DayColHead(props) {\r\n        const {abv, daysOBJ} = props\r\n        return (<>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {abv}\r\n                {\" - \"}\r\n                {daysOBJ[`${abv}Date_es_:date`]}\r\n            </Typography>\r\n            <Typography>\r\n                {daysOBJ[`${abv}HOURS WORKED`]? daysOBJ[`${abv}HOURS WORKED`]+\" hrs.\":\" -- \"}\r\n            </Typography>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    function parseTime(time){\r\n        console.log((Math.round(time.slice(3,5)/15))*25*.01)\r\n        return Number(time.slice(0,2)) + (Math.round(time.slice(3,5)/15))*25*.01\r\n    }\r\n\r\n    function calWeekHours() {\r\n        let total = 0\r\n        abvList.forEach(abv => {if(daysOBJ[`${abv}HOURS WORKED`]) {total += Number(daysOBJ[`${abv}HOURS WORKED`])}});\r\n        console.log(\"week total:\", total)\r\n        setDays(prevDays => ({...prevDays, [\"GRAND TOTALHOURS WORKED\"]: total.toString() }));\r\n    }\r\n\r\n    // const totals = [daysOBJ[\"MONHOURS WORKED\"], daysOBJ[\"TUEHOURS WORKED\"],daysOBJ[\"WEDHOURS WORKED\"],\r\n    // daysOBJ[\"THURHOURS WORKED\"], daysOBJ[\"FRIHOURS WORKED\"], daysOBJ[\"SATHOURS WORKED\"], daysOBJ[\"SUNHOURS WORKED\"],]\r\n\r\n    function calcDayHours(abv) {\r\n        console.log(\"Calc Ran!!!\", abv)\r\n        let total = 0\r\n        if (daysOBJ[`${abv}In`] && daysOBJ[`${abv}Out`]) {\r\n            total = parseTime(daysOBJ[`${abv}Out`]) - parseTime(daysOBJ[`${abv}In`])\r\n            if (daysOBJ[`${abv}In_2`] && daysOBJ[`${abv}Out_2`]) {\r\n                total += parseTime(daysOBJ[`${abv}Out_2`]) - parseTime(daysOBJ[`${abv}In_2`])\r\n                if (daysOBJ[`${abv}In_3`] && daysOBJ[`${abv}Out_3`]) {\r\n                    total += parseTime(daysOBJ[`${abv}Out_3`]) - parseTime(daysOBJ[`${abv}In_3`])\r\n                    if (daysOBJ[`${abv}In_4`] && daysOBJ[`${abv}Out_4`]) {\r\n                        total += parseTime(daysOBJ[`${abv}Out_4`]) - parseTime(daysOBJ[`${abv}In_4`])\r\n                    }\r\n                }\r\n            }        \r\n        }\r\n        setDays(prevDays => ({...prevDays, [`${abv}HOURS WORKED`]: total.toString() }));\r\n        console.log(\"total:\", total);\r\n        calWeekHours()\r\n    }\r\n\r\n    function handleChange(e) {\r\n        //e.persist();\r\n        setDays(prevDays => ({...prevDays, [e.target.name]: e.target.value }));\r\n    }\r\n\r\n    function getTimeInput(abv, end, key){\r\n        return(<Grid item container mt={3} name={abv} key={key} id={abv} onClick={e => {calcDayHours(abv); calWeekHours();}} onBlur={e => {calcDayHours(abv); calWeekHours();}}>\r\n            <Stack spacing={1}>\r\n            <Select\r\n                input={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                label={<InputLabel>Type</InputLabel>}\r\n                name={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                value={daysOBJ[`${abv}Type Reg Vac Sick Pers Hol${end}`]}\r\n                onChange={e => {handleChange(e)}}\r\n            >\r\n                <MenuItem value={\"Reg\"}>Reg</MenuItem>\r\n                <MenuItem value={\"Vac\"}>Vac</MenuItem>\r\n                <MenuItem value={\"Sick\"}>Sick</MenuItem>\r\n                <MenuItem value={\"Pers\"}>Pers</MenuItem>\r\n                <MenuItem value={\"Hol\"}>Hol</MenuItem>\r\n            </Select>\r\n\r\n            <TextField\r\n                label=\"In\"\r\n                type=\"time\"\r\n                fullWidth\r\n                name={`${abv}In${end}`}\r\n                value={daysOBJ[`${abv}In${end}`]}\r\n                onChange={handleChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 1500, // 15 min\r\n                }}\r\n                // sx={{ width: 150 }}\r\n            />\r\n            \r\n            <TextField\r\n                label=\"Out\"\r\n                type=\"time\"\r\n                fullWidth\r\n                name={`${abv}Out${end}`}\r\n                value={daysOBJ[`${abv}Out${end}`]}\r\n                onChange={e => {handleChange(e)}}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 1500, // 15 min\r\n                }}\r\n                // sx={{ width: 150 }}\r\n            />\r\n   \r\n        </Stack>    \r\n        </Grid>            \r\n        )\r\n    }\r\n    \r\n\r\n    return (<Grid item xs={12} container alignItems=\"center\">\r\n            {abvList.map((abv, i) => {\r\n                return(<Grid item sm={12/7} key={i} container spacing={0}>\r\n                    <Grid item><DayColHead abv={abv} daysOBJ={daysOBJ}/></Grid>\r\n                    {/* {getTimeInput(abv, \"\", 1)} */}\r\n                    {/* {getTimeInput(abv, \"_2\", 2)} */}\r\n                    {/* {getTimeInput(abv, \"_3\", 3)} */}\r\n                </Grid>)\r\n            })}\r\n            </Grid>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}