{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\ph-timecard\\\\ph-timecard\\\\my-app\\\\src\\\\componets\\\\FillerButton.js\";\nimport React, { useState } from 'react';\nimport { PDFDocument } from 'pdf-lib';\nimport FileSaver from 'file-saver';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SavePDF = props => {\n  const timekeys = [\"MONIn\", \"TUEIn\", \"WEDIn\", \"THURIn\", \"FRIIn\", \"SATIn\", \"SUNIn\", \"MONOut\", \"TUEOut\", \"WEDOut\", \"THUROut\", \"FRIOut\", \"SATOut\", \"SUNOut\", \"MONIn_2\", \"TUEIn_2\", \"WEDIn_2\", \"THURIn_2\", \"FRIIn_2\", \"SATIn_2\", \"SUNIn_2\", \"MONOut_2\", \"TUEOut_2\", \"WEDOut_2\", \"THUROut_2\", \"FRIOut_2\", \"SATOut_2\", \"SUNOut_2\", \"MONIn_3\", \"TUEIn_3\", \"WEDIn_3\", \"THURIn_3\", \"FRIIn_3\", \"SATIn_3\", \"SUNIn_3\", \"MONOut_3\", \"TUEOut_3\", \"WEDOut_3\", \"THUROut_3\", \"FRIOut_3\", \"SATOut_3\", \"SUNOut_3\"];\n\n  const fillForm = async () => {\n    const url = props.pdf;\n    const formPdfBytes = await fetch(url, {\n      headers: {\n        'Content-Type': 'application/pdf'\n      }\n    }).then(res => {\n      console.log(res.headers);\n      return res.arrayBuffer();\n    });\n    const pdfDoc = await PDFDocument.load(formPdfBytes);\n    const form = pdfDoc.getForm();\n    console.log(form.getFields().map(f => f.getName()));\n    Object.keys(props.timeCard).forEach(key => {\n      console.log(`key:${key}, value:${props.timeCard[key]}`);\n      form.getTextField(key).setText(props.timeCard[key]);\n    });\n    Object.keys(props.daysOBJ).forEach((key, value) => {\n      console.log(`key:${key}, value:${props.daysOBJ[key]}`);\n\n      if (props.daysOBJ[key]) {\n        if (timekeys.includes(key)) {\n          console.log(`found key:${key}`);\n          const time24Hr = Number(props.daysOBJ[key].slice(0, 2));\n          const timeMn = props.daysOBJ[key].slice(3, 5);\n\n          if (time24Hr > 12) {\n            const time12Hr = time24Hr - 12;\n            form.getTextField(key).setText(`${time12Hr}:${timeMn}`);\n          } else {\n            form.getTextField(key).setText(`${time24Hr}:${timeMn}`);\n          }\n\n          ;\n        } else {\n          form.getTextField(key).setText(props.daysOBJ[key]);\n        }\n\n        ;\n      }\n    });\n    const pdfBytes = await pdfDoc.saveAsBase64({\n      dataUri: true\n    });\n    props.setUpdatedPDF(pdfBytes);\n    FileSaver.saveAs(pdfBytes, `Time Card ${props.timeCard[\"Name\"]} for ${props.timeCard[\"Pay Week Ending\"]}`, \"application/pdf\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n    label: \"Download PDF\",\n    icon: /*#__PURE__*/_jsxDEV(PictureAsPdfIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 64\n    }, this),\n    onClick: () => {\n      fillForm();\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n};\n\n_c = SavePDF;\nexport default SavePDF;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavePDF\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/componets/FillerButton.js"],"names":["React","useState","PDFDocument","FileSaver","BottomNavigationAction","PictureAsPdfIcon","SavePDF","props","timekeys","fillForm","url","pdf","formPdfBytes","fetch","headers","then","res","console","log","arrayBuffer","pdfDoc","load","form","getForm","getFields","map","f","getName","Object","keys","timeCard","forEach","key","getTextField","setText","daysOBJ","value","includes","time24Hr","Number","slice","timeMn","time12Hr","pdfBytes","saveAsBase64","dataUri","setUpdatedPDF","saveAs"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { PDFDocument } from 'pdf-lib';\r\nimport FileSaver from 'file-saver';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\n\r\nconst SavePDF  = (props) => {\r\n\r\n    const timekeys = [\"MONIn\", \"TUEIn\", \"WEDIn\", \"THURIn\", \"FRIIn\", \"SATIn\", \"SUNIn\", \"MONOut\", \"TUEOut\", \"WEDOut\", \"THUROut\", \"FRIOut\", \"SATOut\", \"SUNOut\", \r\n    \"MONIn_2\", \"TUEIn_2\", \"WEDIn_2\", \"THURIn_2\", \"FRIIn_2\", \"SATIn_2\", \"SUNIn_2\", \"MONOut_2\", \"TUEOut_2\", \"WEDOut_2\", \"THUROut_2\", \"FRIOut_2\", \"SATOut_2\", \"SUNOut_2\",\r\n    \"MONIn_3\", \"TUEIn_3\", \"WEDIn_3\", \"THURIn_3\", \"FRIIn_3\", \"SATIn_3\", \"SUNIn_3\", \"MONOut_3\", \"TUEOut_3\", \"WEDOut_3\", \"THUROut_3\", \"FRIOut_3\", \"SATOut_3\", \"SUNOut_3\",\r\n    ]\r\n\r\n    const fillForm = async () => {\r\n        const url = props.pdf;\r\n        const formPdfBytes = await fetch(url,\r\n        {headers:{'Content-Type':'application/pdf'}})\r\n            .then(res => {\r\n                console.log(res.headers)\r\n                return (res.arrayBuffer())})\r\n        \r\n        const pdfDoc = await PDFDocument.load(formPdfBytes);\r\n\r\n        const form = pdfDoc.getForm();\r\n        console.log(form.getFields().map(f => f.getName()));\r\n        Object.keys(props.timeCard).forEach(key => {\r\n            console.log(`key:${key}, value:${props.timeCard[key]}`)\r\n            form.getTextField(key).setText(props.timeCard[key])\r\n        });\r\n        \r\n        Object.keys(props.daysOBJ).forEach((key, value) => {\r\n            console.log(`key:${key}, value:${props.daysOBJ[key]}`);\r\n            if (props.daysOBJ[key]) { \r\n                if (timekeys.includes(key)) {\r\n                    console.log(`found key:${key}`)\r\n                    const time24Hr = Number(props.daysOBJ[key].slice(0,2));\r\n                    const timeMn = props.daysOBJ[key].slice(3,5);\r\n                    if(time24Hr > 12) {\r\n                        const time12Hr = time24Hr - 12;\r\n                        form.getTextField(key).setText(`${time12Hr}:${timeMn}`);\r\n                    }else {form.getTextField(key).setText(`${time24Hr}:${timeMn}`)};}\r\n                else {form.getTextField(key).setText(props.daysOBJ[key])};\r\n            }\r\n        });\r\n\r\n        const pdfBytes = await pdfDoc.saveAsBase64({ dataUri: true });\r\n        props.setUpdatedPDF(pdfBytes);  \r\n        FileSaver.saveAs(pdfBytes, `Time Card ${props.timeCard[\"Name\"]} for ${props.timeCard[\"Pay Week Ending\"]}`, \"application/pdf\");\r\n    }\r\n\r\n    return (<BottomNavigationAction label=\"Download PDF\" icon={<PictureAsPdfIcon/>} onClick={() => {fillForm()}}/>)\r\n}\r\n\r\nexport default SavePDF;"]},"metadata":{},"sourceType":"module"}