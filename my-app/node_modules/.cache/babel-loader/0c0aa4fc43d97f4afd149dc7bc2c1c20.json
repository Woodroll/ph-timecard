{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\ph-timecard\\\\ph-timecard\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport formPDF from './fillable.pdf';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport { PDFDocument } from 'pdf-lib';\nimport Day from './classes/Day';\nimport Days from './classes/Days';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [updatedPDF, setUpdatedPDF] = useState(0);\n  const [form, setForm] = useState(); // const [timeCard, setTimeCard] = useState();\n  // async function getPDF () {\n  //   const url = formPDF;\n  //   const formPdfBytes = await fetch(url, {headers:{\"Content-Type\":\"application/pdf\"}})\n  //     .then(res => {return (res.arrayBuffer())});\n  //   const pdfDoc = await PDFDocument.load(formPdfBytes);\n  //   const pdfForm = await pdfDoc.getForm()\n  //   setForm(pdfForm)\n  //   console.log(pdfForm)\n  //   const feildNames = await pdfForm.getFields().map(f => f.getName());\n  //   setTimeCard(prevTC => {feildNames.forEach(name => ({...prevTC, [name] : undefined}))});\n  //   console.log(timeCard)\n  //   } \n\n  const [monday, setMon] = useState(new Day(\"MON\"));\n  const [tuesday, setTue] = useState(new Day(\"TUE\"));\n  const [wednesday, setWed] = useState(new Day(\"WED\"));\n  const [thursday, setThur] = useState(new Day(\"THUR\"));\n  const [friday, setFri] = useState(new Day(\"FRI\"));\n  const [saturday, setSat] = useState(new Day(\"SAT\"));\n  const [sunday, setSun] = useState(new Day(\"SUN\"));\n  const abvList = [\"MON\", \"TUES\", \"WED\", \"THUR\", \"FRI\", \"SAT\", \"SUN\"];\n  const [daysOBJ, setDays] = useState(new Days(abvList));\n  const [timeCard, setTimeCard] = useState({\n    \"Name\": undefined,\n    \"Position\": undefined,\n    \"Pay Week Ending\": undefined\n  });\n  const setters = [setMon, setTue, setWed, setThur, setFri, setSat, setSun];\n  const days = [monday, tuesday, wednesday, thursday, friday, saturday, sunday]; // const setDays = (Sunday) =>  {\n  //   const dateSunday = new Date(Date.parse('${Sunday}T00:00:00'))\n  //   for (let index = 7; index > 0; index = index - 1){\n  //   }}\n\n  const myDay = new Day(\"SUN\", \"2021-07-04\");\n  myDay.num2 = 10;\n  console.log(`num 2:${myDay[\"num2\"]}, Hours worked: ${myDay.calcHours()}`);\n  const myDate = new Date(Date.parse(\"2021-07-04T00:00:00\"));\n  myDate.setDate(myDate.getDate() - 6);\n  const sDate = myDate.toLocaleString('en-us', {\n    weekday: 'short'\n  }).toUpperCase();\n  console.log(timeCard.Days ? \"True\" : \"Fal\");\n  useEffect(() => {\n    // getPDF()\n    const data = localStorage.getItem(\"my-time-card\");\n\n    if (data) {\n      setTimeCard(JSON.parse(data));\n    }\n\n    ;\n    const daysData = localStorage.getItem(\"my-days\");\n\n    if (daysData) {\n      setDays(JSON.parse(daysData));\n    }\n\n    ;\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard));\n    localStorage.setItem(\"my-days\", JSON.stringify(daysOBJ));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SavePDF, {\n        pdf: formPDF,\n        updatedPDF: updatedPDF,\n        setUpdatedPDF: setUpdatedPDF,\n        timeCard: timeCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        timeCard: timeCard,\n        setTimeCard: setTimeCard,\n        setters: setters,\n        days: days,\n        daysOBJ: daysOBJ,\n        setDays: setDays,\n        abvList: abvList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dmyfFPcyzn9e0ryei06DsjtNFr4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/App.js"],"names":["formPDF","React","useState","useEffect","SavePDF","Form","PDFDocument","Day","Days","App","updatedPDF","setUpdatedPDF","form","setForm","monday","setMon","tuesday","setTue","wednesday","setWed","thursday","setThur","friday","setFri","saturday","setSat","sunday","setSun","abvList","daysOBJ","setDays","timeCard","setTimeCard","undefined","setters","days","myDay","num2","console","log","calcHours","myDate","Date","parse","setDate","getDate","sDate","toLocaleString","weekday","toUpperCase","data","localStorage","getItem","JSON","daysData","setItem","stringify","logo"],"mappings":";;;;AACA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,oBAAP;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC,CAHa,CAIb;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAM,CAACY,MAAD,EAASC,MAAT,IAAmBb,QAAQ,CAAC,IAAIK,GAAJ,CAAQ,KAAR,CAAD,CAAjC;AACA,QAAM,CAACS,OAAD,EAAUC,MAAV,IAAoBf,QAAQ,CAAC,IAAIK,GAAJ,CAAQ,KAAR,CAAD,CAAlC;AACA,QAAM,CAACW,SAAD,EAAYC,MAAZ,IAAsBjB,QAAQ,CAAC,IAAIK,GAAJ,CAAQ,KAAR,CAAD,CAApC;AACA,QAAM,CAACa,QAAD,EAAWC,OAAX,IAAsBnB,QAAQ,CAAC,IAAIK,GAAJ,CAAQ,MAAR,CAAD,CAApC;AACA,QAAM,CAACe,MAAD,EAASC,MAAT,IAAmBrB,QAAQ,CAAC,IAAIK,GAAJ,CAAQ,KAAR,CAAD,CAAjC;AACA,QAAM,CAACiB,QAAD,EAAWC,MAAX,IAAqBvB,QAAQ,CAAC,IAAIK,GAAJ,CAAQ,KAAR,CAAD,CAAnC;AACA,QAAM,CAACmB,MAAD,EAASC,MAAT,IAAmBzB,QAAQ,CAAC,IAAIK,GAAJ,CAAQ,KAAR,CAAD,CAAjC;AAEA,QAAMqB,OAAO,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,MAAvB,EAA+B,KAA/B,EAAsC,KAAtC,EAA6C,KAA7C,CAAhB;AACA,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqB5B,QAAQ,CAAC,IAAIM,IAAJ,CAASoB,OAAT,CAAD,CAAnC;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC;AACvC,YAAS+B,SAD8B;AAEvC,gBAAYA,SAF2B;AAGvC,uBAAmBA;AAHoB,GAAD,CAAxC;AAMA,QAAMC,OAAO,GAAG,CAACnB,MAAD,EAASE,MAAT,EAAiBE,MAAjB,EAAyBE,OAAzB,EAAkCE,MAAlC,EAA0CE,MAA1C,EAAkDE,MAAlD,CAAhB;AACA,QAAMQ,IAAI,GAAG,CAACrB,MAAD,EAASE,OAAT,EAAkBE,SAAlB,EAA6BE,QAA7B,EAAuCE,MAAvC,EAA+CE,QAA/C,EAAyDE,MAAzD,CAAb,CAvCa,CAyCb;AACA;AACA;AAEA;;AACA,QAAMU,KAAK,GAAG,IAAI7B,GAAJ,CAAQ,KAAR,EAAc,YAAd,CAAd;AACA6B,EAAAA,KAAK,CAACC,IAAN,GAAa,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,SAAQH,KAAK,CAAC,MAAD,CAAS,mBAAkBA,KAAK,CAACI,SAAN,EAAkB,EAAvE;AACA,QAAMC,MAAM,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAW,qBAAX,CAAT,CAAf;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAeH,MAAM,CAACI,OAAP,KAAmB,CAAlC;AACA,QAAMC,KAAK,GAAGL,MAAM,CAACM,cAAP,CAAsB,OAAtB,EAA+B;AAAGC,IAAAA,OAAO,EAAE;AAAZ,GAA/B,EAAsDC,WAAtD,EAAd;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACvB,IAAT,GAAc,MAAd,GAAqB,KAAjC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAM+C,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;;AACA,QAAIF,IAAJ,EAAU;AACRlB,MAAAA,WAAW,CAACqB,IAAI,CAACV,KAAL,CAAWO,IAAX,CAAD,CAAX;AACD;;AAAA;AAED,UAAMI,QAAQ,GAAGH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAjB;;AACA,QAAIE,QAAJ,EAAc;AACVxB,MAAAA,OAAO,CAACuB,IAAI,CAACV,KAAL,CAAWW,QAAX,CAAD,CAAP;AACH;;AAAA;AAEA,GAZM,EAYJ,EAZI,CAAT;AAcAnD,EAAAA,SAAS,CAAC,MAAM;AACdgD,IAAAA,YAAY,CAACI,OAAb,CAAqB,cAArB,EAAqCF,IAAI,CAACG,SAAL,CAAezB,QAAf,CAArC;AACAoB,IAAAA,YAAY,CAACI,OAAb,CAAqB,SAArB,EAAgCF,IAAI,CAACG,SAAL,CAAe3B,OAAf,CAAhC;AACD,GAHQ,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAE4B,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,OAAD;AACE,QAAA,GAAG,EAAEzD,OADP;AAEE,QAAA,UAAU,EAAEU,UAFd;AAGE,QAAA,aAAa,EAAEC,aAHjB;AAIE,QAAA,QAAQ,EAAEoB;AAJZ;AAAA;AAAA;AAAA;AAAA,cALF,eAWE,QAAC,IAAD;AACA,QAAA,QAAQ,EAAIA,QADZ;AAEA,QAAA,WAAW,EAAIC,WAFf;AAGA,QAAA,OAAO,EAAEE,OAHT;AAIA,QAAA,IAAI,EAAEC,IAJN;AAKA,QAAA,OAAO,EAAEN,OALT;AAMA,QAAA,OAAO,EAAEC,OANT;AAOA,QAAA,OAAO,EAAEF;AAPT;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAlGQnB,G;;KAAAA,G;AAoGT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport formPDF from './fillable.pdf';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport { PDFDocument } from 'pdf-lib';\nimport Day from './classes/Day'\nimport Days from './classes/Days'\n\nfunction App() {\n  const [updatedPDF, setUpdatedPDF] = useState(0);\n\n  const [form, setForm] = useState();\n  // const [timeCard, setTimeCard] = useState();\n  \n  // async function getPDF () {\n  //   const url = formPDF;\n  //   const formPdfBytes = await fetch(url, {headers:{\"Content-Type\":\"application/pdf\"}})\n  //     .then(res => {return (res.arrayBuffer())});\n      \n  //   const pdfDoc = await PDFDocument.load(formPdfBytes);\n  //   const pdfForm = await pdfDoc.getForm()\n  //   setForm(pdfForm)\n  //   console.log(pdfForm)\n  //   const feildNames = await pdfForm.getFields().map(f => f.getName());\n  //   setTimeCard(prevTC => {feildNames.forEach(name => ({...prevTC, [name] : undefined}))});\n  //   console.log(timeCard)\n  //   } \n\n\n  const [monday, setMon] = useState(new Day(\"MON\"));\n  const [tuesday, setTue] = useState(new Day(\"TUE\"));\n  const [wednesday, setWed] = useState(new Day(\"WED\"));\n  const [thursday, setThur] = useState(new Day(\"THUR\"));\n  const [friday, setFri] = useState(new Day(\"FRI\"));\n  const [saturday, setSat] = useState(new Day(\"SAT\"));\n  const [sunday, setSun] = useState(new Day(\"SUN\"));\n\n  const abvList = [\"MON\", \"TUES\", \"WED\", \"THUR\", \"FRI\", \"SAT\", \"SUN\"]\n  const [daysOBJ, setDays] = useState(new Days(abvList))\n  \n  const [timeCard, setTimeCard] = useState({\n    \"Name\" : undefined,\n    \"Position\": undefined,\n    \"Pay Week Ending\": undefined,\n  });\n\n  const setters = [setMon, setTue, setWed, setThur, setFri, setSat, setSun]\n  const days = [monday, tuesday, wednesday, thursday, friday, saturday, sunday]\n\n  // const setDays = (Sunday) =>  {\n  //   const dateSunday = new Date(Date.parse('${Sunday}T00:00:00'))\n  //   for (let index = 7; index > 0; index = index - 1){\n\n  //   }}\n  const myDay = new Day(\"SUN\",\"2021-07-04\")\n  myDay.num2 = 10\n  console.log(`num 2:${myDay[\"num2\"]}, Hours worked: ${myDay.calcHours()}`)\n  const myDate = new Date(Date.parse(\"2021-07-04T00:00:00\"))\n  myDate.setDate(myDate.getDate() - 6)\n  const sDate = myDate.toLocaleString('en-us', {  weekday: 'short' }).toUpperCase()\n  console.log(timeCard.Days?\"True\":\"Fal\")\n  \n  useEffect(() => {\n    // getPDF()\n    const data = localStorage.getItem(\"my-time-card\"); \n    if (data) {\n      setTimeCard(JSON.parse(data))\n    };\n    \n    const daysData = localStorage.getItem(\"my-days\"); \n    if (daysData) {\n        setDays(JSON.parse(daysData))\n    };\n\n    }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard))\n    localStorage.setItem(\"my-days\", JSON.stringify(daysOBJ))\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <SavePDF \n          pdf={formPDF}\n          updatedPDF={updatedPDF}\n          setUpdatedPDF={setUpdatedPDF}\n          timeCard={timeCard}\n          />\n        <Form\n        timeCard = {timeCard}\n        setTimeCard = {setTimeCard}\n        setters={setters}\n        days={days}\n        daysOBJ={daysOBJ}\n        setDays={setDays}\n        abvList={abvList}\n        />\n      </header>  \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}