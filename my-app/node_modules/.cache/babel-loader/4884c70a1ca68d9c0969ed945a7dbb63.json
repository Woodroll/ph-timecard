{"ast":null,"code":"import _slicedToArray from\"C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import logo from\"./logo.svg\";import formPDF from'./fillable.pdf';import React,{useState,useEffect}from'react';import'./App.css';import SavePDF from'./componets/FillerButton';import Form from'./componets/Form';import'@fontsource/roboto';import{PDFDocument}from'pdf-lib';import Day from'./classes/Day';import Days from'./classes/Days';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),updatedPDF=_useState2[0],setUpdatedPDF=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),form=_useState4[0],setForm=_useState4[1];// const [timeCard, setTimeCard] = useState();\n// async function getPDF () {\n//   const url = formPDF;\n//   const formPdfBytes = await fetch(url, {headers:{\"Content-Type\":\"application/pdf\"}})\n//     .then(res => {return (res.arrayBuffer())});\n//   const pdfDoc = await PDFDocument.load(formPdfBytes);\n//   const pdfForm = await pdfDoc.getForm()\n//   setForm(pdfForm)\n//   console.log(pdfForm)\n//   const feildNames = await pdfForm.getFields().map(f => f.getName());\n//   setTimeCard(prevTC => {feildNames.forEach(name => ({...prevTC, [name] : undefined}))});\n//   console.log(timeCard)\n//   } \nvar _useState5=useState(new Day(\"MON\")),_useState6=_slicedToArray(_useState5,2),monday=_useState6[0],setMon=_useState6[1];var _useState7=useState(new Day(\"TUE\")),_useState8=_slicedToArray(_useState7,2),tuesday=_useState8[0],setTue=_useState8[1];var _useState9=useState(new Day(\"WED\")),_useState10=_slicedToArray(_useState9,2),wednesday=_useState10[0],setWed=_useState10[1];var _useState11=useState(new Day(\"THUR\")),_useState12=_slicedToArray(_useState11,2),thursday=_useState12[0],setThur=_useState12[1];var _useState13=useState(new Day(\"FRI\")),_useState14=_slicedToArray(_useState13,2),friday=_useState14[0],setFri=_useState14[1];var _useState15=useState(new Day(\"SAT\")),_useState16=_slicedToArray(_useState15,2),saturday=_useState16[0],setSat=_useState16[1];var _useState17=useState(new Day(\"SUN\")),_useState18=_slicedToArray(_useState17,2),sunday=_useState18[0],setSun=_useState18[1];var abvList=[\"MON\",\"TUE\",\"WED\",\"THUR\",\"FRI\",\"SAT\",\"SUN\"];var _useState19=useState(new Days(abvList)),_useState20=_slicedToArray(_useState19,2),daysOBJ=_useState20[0],setDays=_useState20[1];var _useState21=useState({\"Name\":undefined,\"Position\":undefined,\"Pay Week Ending\":undefined}),_useState22=_slicedToArray(_useState21,2),timeCard=_useState22[0],setTimeCard=_useState22[1];var setters=[setMon,setTue,setWed,setThur,setFri,setSat,setSun];var days=[monday,tuesday,wednesday,thursday,friday,saturday,sunday];// const setDays = (Sunday) =>  {\n//   const dateSunday = new Date(Date.parse('${Sunday}T00:00:00'))\n//   for (let index = 7; index > 0; index = index - 1){\n//   }}\nvar myDay=new Day(\"SUN\",\"2021-07-04\");myDay.num2=10;console.log(\"num 2:\".concat(myDay[\"num2\"],\", Hours worked: \").concat(myDay.calcHours()));var myDate=new Date(Date.parse(\"2021-07-04T00:00:00\"));myDate.setDate(myDate.getDate()-6);var sDate=myDate.toLocaleString('en-us',{weekday:'short'}).toUpperCase();console.log(timeCard.Days?\"True\":\"Fal\");useEffect(function(){// getPDF()\nvar data=localStorage.getItem(\"my-time-card\");if(data){setTimeCard(JSON.parse(data));};var daysData=localStorage.getItem(\"my-days\");if(daysData){setDays(JSON.parse(daysData));};},[]);useEffect(function(){localStorage.setItem(\"my-time-card\",JSON.stringify(timeCard));localStorage.setItem(\"my-days\",JSON.stringify(daysOBJ));});return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(SavePDF,{pdf:formPDF,updatedPDF:updatedPDF,setUpdatedPDF:setUpdatedPDF,timeCard:timeCard,daysOBJ:daysOBJ}),/*#__PURE__*/_jsx(Form,{timeCard:timeCard,setTimeCard:setTimeCard,setters:setters,days:days,daysOBJ:daysOBJ,setDays:setDays,abvList:abvList})]})});}export default App;","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/ph-timecard/ph-timecard/my-app/src/App.js"],"names":["formPDF","React","useState","useEffect","SavePDF","Form","PDFDocument","Day","Days","App","updatedPDF","setUpdatedPDF","form","setForm","monday","setMon","tuesday","setTue","wednesday","setWed","thursday","setThur","friday","setFri","saturday","setSat","sunday","setSun","abvList","daysOBJ","setDays","undefined","timeCard","setTimeCard","setters","days","myDay","num2","console","log","calcHours","myDate","Date","parse","setDate","getDate","sDate","toLocaleString","weekday","toUpperCase","data","localStorage","getItem","JSON","daysData","setItem","stringify"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport formPDF from './fillable.pdf';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport { PDFDocument } from 'pdf-lib';\nimport Day from './classes/Day'\nimport Days from './classes/Days'\n\nfunction App() {\n  const [updatedPDF, setUpdatedPDF] = useState(0);\n\n  const [form, setForm] = useState();\n  // const [timeCard, setTimeCard] = useState();\n  \n  // async function getPDF () {\n  //   const url = formPDF;\n  //   const formPdfBytes = await fetch(url, {headers:{\"Content-Type\":\"application/pdf\"}})\n  //     .then(res => {return (res.arrayBuffer())});\n      \n  //   const pdfDoc = await PDFDocument.load(formPdfBytes);\n  //   const pdfForm = await pdfDoc.getForm()\n  //   setForm(pdfForm)\n  //   console.log(pdfForm)\n  //   const feildNames = await pdfForm.getFields().map(f => f.getName());\n  //   setTimeCard(prevTC => {feildNames.forEach(name => ({...prevTC, [name] : undefined}))});\n  //   console.log(timeCard)\n  //   } \n\n\n  const [monday, setMon] = useState(new Day(\"MON\"));\n  const [tuesday, setTue] = useState(new Day(\"TUE\"));\n  const [wednesday, setWed] = useState(new Day(\"WED\"));\n  const [thursday, setThur] = useState(new Day(\"THUR\"));\n  const [friday, setFri] = useState(new Day(\"FRI\"));\n  const [saturday, setSat] = useState(new Day(\"SAT\"));\n  const [sunday, setSun] = useState(new Day(\"SUN\"));\n\n  const abvList = [\"MON\", \"TUE\", \"WED\", \"THUR\", \"FRI\", \"SAT\", \"SUN\"]\n  const [daysOBJ, setDays] = useState(new Days(abvList))\n  \n  const [timeCard, setTimeCard] = useState({\n    \"Name\" : undefined,\n    \"Position\": undefined,\n    \"Pay Week Ending\": undefined,\n  });\n\n  const setters = [setMon, setTue, setWed, setThur, setFri, setSat, setSun]\n  const days = [monday, tuesday, wednesday, thursday, friday, saturday, sunday]\n\n  // const setDays = (Sunday) =>  {\n  //   const dateSunday = new Date(Date.parse('${Sunday}T00:00:00'))\n  //   for (let index = 7; index > 0; index = index - 1){\n\n  //   }}\n  const myDay = new Day(\"SUN\",\"2021-07-04\")\n  myDay.num2 = 10\n  console.log(`num 2:${myDay[\"num2\"]}, Hours worked: ${myDay.calcHours()}`)\n  const myDate = new Date(Date.parse(\"2021-07-04T00:00:00\"))\n  myDate.setDate(myDate.getDate() - 6)\n  const sDate = myDate.toLocaleString('en-us', {  weekday: 'short' }).toUpperCase()\n  console.log(timeCard.Days?\"True\":\"Fal\")\n  \n  useEffect(() => {\n    // getPDF()\n    const data = localStorage.getItem(\"my-time-card\"); \n    if (data) {\n      setTimeCard(JSON.parse(data))\n    };\n    \n    const daysData = localStorage.getItem(\"my-days\"); \n    if (daysData) {\n        setDays(JSON.parse(daysData))\n    };\n\n    }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard))\n    localStorage.setItem(\"my-days\", JSON.stringify(daysOBJ))\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SavePDF \n          pdf={formPDF}\n          updatedPDF={updatedPDF}\n          setUpdatedPDF={setUpdatedPDF}\n          timeCard={timeCard}\n          daysOBJ={daysOBJ}\n          />\n        <Form\n        timeCard = {timeCard}\n        setTimeCard = {setTimeCard}\n        setters={setters}\n        days={days}\n        daysOBJ={daysOBJ}\n        setDays={setDays}\n        abvList={abvList}\n        />\n      </header>  \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}