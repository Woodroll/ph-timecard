[{"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\index.js":"1","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\App.js":"2","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\FillerButton.js":"4","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\Form.js":"5","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\classes\\Day.js":"6","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\DayInputs.js":"7","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\classes\\Days.js":"8"},{"size":500,"mtime":1615387354323,"results":"9","hashOfConfig":"10"},{"size":3421,"mtime":1625533991619,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1615387354323,"results":"12","hashOfConfig":"10"},{"size":1633,"mtime":1625534861068,"results":"13","hashOfConfig":"10"},{"size":5516,"mtime":1625513039569,"results":"14","hashOfConfig":"10"},{"size":748,"mtime":1625535019534,"results":"15","hashOfConfig":"10"},{"size":4437,"mtime":1625534253971,"results":"16","hashOfConfig":"10"},{"size":767,"mtime":1625534615338,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"os9wd9",{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\index.js",[],"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\App.js",["38","39","40","41","42"],"import logo from './logo.svg';\nimport formPDF from './fillable.pdf';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport SavePDF from './componets/FillerButton';\nimport Form from './componets/Form';\nimport '@fontsource/roboto';\nimport { PDFDocument } from 'pdf-lib';\nimport Day from './classes/Day'\nimport Days from './classes/Days'\n\nfunction App() {\n  const [updatedPDF, setUpdatedPDF] = useState(0);\n\n  const [form, setForm] = useState();\n  // const [timeCard, setTimeCard] = useState();\n  \n  // async function getPDF () {\n  //   const url = formPDF;\n  //   const formPdfBytes = await fetch(url, {headers:{\"Content-Type\":\"application/pdf\"}})\n  //     .then(res => {return (res.arrayBuffer())});\n      \n  //   const pdfDoc = await PDFDocument.load(formPdfBytes);\n  //   const pdfForm = await pdfDoc.getForm()\n  //   setForm(pdfForm)\n  //   console.log(pdfForm)\n  //   const feildNames = await pdfForm.getFields().map(f => f.getName());\n  //   setTimeCard(prevTC => {feildNames.forEach(name => ({...prevTC, [name] : undefined}))});\n  //   console.log(timeCard)\n  //   } \n\n\n  const [monday, setMon] = useState(new Day(\"MON\"));\n  const [tuesday, setTue] = useState(new Day(\"TUE\"));\n  const [wednesday, setWed] = useState(new Day(\"WED\"));\n  const [thursday, setThur] = useState(new Day(\"THUR\"));\n  const [friday, setFri] = useState(new Day(\"FRI\"));\n  const [saturday, setSat] = useState(new Day(\"SAT\"));\n  const [sunday, setSun] = useState(new Day(\"SUN\"));\n\n  const abvList = [\"MON\", \"TUE\", \"WED\", \"THUR\", \"FRI\", \"SAT\", \"SUN\"]\n  const [daysOBJ, setDays] = useState(new Days(abvList))\n  \n  const [timeCard, setTimeCard] = useState({\n    \"Name\" : undefined,\n    \"Position\": undefined,\n    \"Pay Week Ending\": undefined,\n  });\n\n  const setters = [setMon, setTue, setWed, setThur, setFri, setSat, setSun]\n  const days = [monday, tuesday, wednesday, thursday, friday, saturday, sunday]\n\n  // const setDays = (Sunday) =>  {\n  //   const dateSunday = new Date(Date.parse('${Sunday}T00:00:00'))\n  //   for (let index = 7; index > 0; index = index - 1){\n\n  //   }}\n  const myDay = new Day(\"SUN\",\"2021-07-04\")\n  myDay.num2 = 10\n  console.log(`num 2:${myDay[\"num2\"]}, Hours worked: ${myDay.calcHours()}`)\n  const myDate = new Date(Date.parse(\"2021-07-04T00:00:00\"))\n  myDate.setDate(myDate.getDate() - 6)\n  const sDate = myDate.toLocaleString('en-us', {  weekday: 'short' }).toUpperCase()\n  console.log(timeCard.Days?\"True\":\"Fal\")\n  \n  useEffect(() => {\n    // getPDF()\n    const data = localStorage.getItem(\"my-time-card\"); \n    if (data) {\n      setTimeCard(JSON.parse(data))\n    };\n    \n    const daysData = localStorage.getItem(\"my-days\"); \n    if (daysData) {\n        setDays(JSON.parse(daysData))\n    };\n\n    }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"my-time-card\", JSON.stringify(timeCard))\n    localStorage.setItem(\"my-days\", JSON.stringify(daysOBJ))\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SavePDF \n          pdf={formPDF}\n          updatedPDF={updatedPDF}\n          setUpdatedPDF={setUpdatedPDF}\n          timeCard={timeCard}\n          daysOBJ={daysOBJ}\n          />\n        <Form\n        timeCard = {timeCard}\n        setTimeCard = {setTimeCard}\n        setters={setters}\n        days={days}\n        daysOBJ={daysOBJ}\n        setDays={setDays}\n        abvList={abvList}\n        />\n      </header>  \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\FillerButton.js",["43"],"import React, {useState} from 'react';\r\nimport { PDFDocument } from 'pdf-lib';\r\nimport FileSaver from 'file-saver';\r\n\r\n\r\nconst SavePDF  = (props) => {\r\n\r\n    const fillForm = async () => {\r\n        // let fileReader = new FileReader();\r\n        const url = props.pdf;\r\n        const formPdfBytes = await fetch(url,\r\n        {headers:{'Content-Type':'application/pdf'}})\r\n            .then(res => {\r\n                console.log(res.headers)\r\n                return (res.arrayBuffer())})\r\n        // fileReader.onload = function(e) {\r\n        //     // The file's text will be printed here\r\n        //     console.log(e.target.result)\r\n        //   };\r\n        \r\n        const pdfDoc = await PDFDocument.load(formPdfBytes);\r\n\r\n        const form = pdfDoc.getForm();\r\n        console.log(form.getFields().map(f => f.getName()));\r\n        Object.keys(props.timeCard).forEach(key => {\r\n            console.log(`key:${key}, value:${props.timeCard[key]}`)\r\n            form.getTextField(key).setText(props.timeCard[key])\r\n        });\r\n        \r\n        Object.keys(props.daysOBJ).forEach((key, value) => {\r\n            console.log(`key:${key}, value:${props.daysOBJ[key]}`);\r\n            if (props.daysOBJ[key]) { form.getTextField(key).setText(props.daysOBJ[key])};\r\n        });\r\n\r\n        const pdfBytes = await pdfDoc.saveAsBase64({ dataUri: true });\r\n        props.setUpdatedPDF(pdfBytes);  \r\n        FileSaver.saveAs(pdfBytes, \"pdf-lib_form_creation_example.pdf\", \"application/pdf\");\r\n    }\r\n\r\n    return (<div>\r\n                <button onClick={() => {fillForm()}}>Fill PDF</button>\r\n            </div>);\r\n}\r\n\r\nexport default SavePDF;","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\Form.js",["44","45","46","47","48","49","50","51","52"],"import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import { createStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DayInputs from './DayInputs.js'\r\n\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright Â© '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   paper: {\r\n//     marginTop: theme.spacing(7),\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//   },\r\n//   avatar: {\r\n//     margin: theme.spacing(1),\r\n//     backgroundColor: theme.palette.secondary.main,\r\n//   },\r\n//   form: {\r\n//     width: '100%', // Fix IE 11 issue.\r\n//     marginTop: theme.spacing(3),\r\n//   },\r\n//   submit: {\r\n//     margin: theme.spacing(3, 0, 2),\r\n//   },\r\n// }));\r\n\r\n\r\nconst Form = (props) => {\r\n    // const classes = useStyles();\r\n    const {timeCard, setTimeCard, setters, days, daysOBJ, setDays, abvList} = props\r\n\r\n    function handleChange(e) {\r\n        e.persist();\r\n        setTimeCard(prevTC => ({...prevTC, [e.target.name]: e.target.value }));\r\n        //console.log(timeCard);\r\n    }\r\n\r\n    function handleWeekChange(e) {\r\n        e.persist();\r\n        setTimeCard(prevTC => ({...prevTC, [e.target.name]: e.target.value }));\r\n        abvList.forEach((abv, i)=>{\r\n            const dateSunday = new Date(Date.parse(`${e.target.value}T00:00:00`));             \r\n            const date = new Date(dateSunday.setDate(dateSunday.getDate() - (6 - i)))\r\n            const formatedDate = `${date.getMonth()+1}/${date.getDate()}`\r\n            console.log(`i:${i}, date:${date}, fd:${formatedDate}`)\r\n           \r\n            setDays(prevDays => ({...prevDays, [`${abv}Date_es_:date`]  : formatedDate})) \r\n            console.log(daysOBJ)\r\n    })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className=\"classes.paper\">\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className=\"classes.form\" onSubmit={handleSubmit} onInput={handleChange} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Name\"\r\n                label=\"Name\"\r\n                name=\"Name\"\r\n                value={timeCard? timeCard[\"Name\"]:\"\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Position\"\r\n                label=\"Position\"\r\n                name=\"Position\"\r\n                value={timeCard? timeCard[\"Position\"]:\"\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                type=\"date\"\r\n                // defaultValue=\"2017-05-24\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"Pay Week Ending\"\r\n                label=\"Pay Week Ending\"\r\n                id=\"PayWeekEnding\"\r\n                onChange = {handleWeekChange}\r\n                value={timeCard? timeCard[\"Pay Week Ending\"]:\"\"}\r\n                sx={{ width: 220 }}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <DayInputs \r\n                daysOBJ={daysOBJ}\r\n                setDays={setDays}\r\n                abvList={abvList}/>\r\n            </Grid> \r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"classes.submit\"\r\n            // onClick={e => console.log(e)}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            {/* <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid> */}\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n      </Box>\r\n    </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default Form\r\n","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\classes\\Day.js",[],"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\DayInputs.js",["53","54","55","56","57","58"],"import React, {useEffect} from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DateFns from 'date-fns';\r\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\r\nimport TimePicker from '@material-ui/lab/TimePicker';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function DayInputs(props) {\r\n    const {daysOBJ, setDays, abvList} = props\r\n\r\n    console.log(daysOBJ);\r\n\r\n    function parseTime(time){\r\n        return Number(time.slice(0,2)) + (Math.round(time.slice(3,5))/15)*25*.01\r\n    }\r\n\r\n    function calWeekHours() {\r\n        let total = 0\r\n        abvList.forEach(abv => {if(daysOBJ[`${abv}HOURS WORKED`]) {total += Number(daysOBJ[`${abv}HOURS WORKED`])}});\r\n        console.log(\"week total:\", total)\r\n        setDays(prevDays => ({...prevDays, [\"GRAND TOTALHOURS WORKED\"]: total.toString() }));\r\n    }\r\n\r\n\r\n    function calcDayHours(abv) {\r\n        let total = 0\r\n        if (daysOBJ[`${abv}In`] && daysOBJ[`${abv}Out`]) {\r\n            total = parseTime(daysOBJ[`${abv}Out`]) - parseTime(daysOBJ[`${abv}In`])\r\n            if (daysOBJ[`${abv}In_2`] && daysOBJ[`${abv}Out_2`]) {\r\n                total += parseTime(daysOBJ[`${abv}Out_2`]) - parseTime(daysOBJ[`${abv}In_2`])\r\n                if (daysOBJ[`${abv}In_3`] && daysOBJ[`${abv}Out_3`]) {\r\n                    total += parseTime(daysOBJ[`${abv}Out_3`]) - parseTime(daysOBJ[`${abv}In_3`])\r\n                    if (daysOBJ[`${abv}In_4`] && daysOBJ[`${abv}Out_4`]) {\r\n                        total += parseTime(daysOBJ[`${abv}Out_4`]) - parseTime(daysOBJ[`${abv}In_4`])\r\n                    }\r\n                }\r\n            }        \r\n        }\r\n        console.log(\"total:\", total);\r\n        setDays(prevDays => ({...prevDays, [`${abv}HOURS WORKED`]: total.toString() }));\r\n        calWeekHours()\r\n    }\r\n\r\n    function handleChange(e, i) {\r\n        e.persist();\r\n        console.log(\"error:\", e.target);\r\n        setDays(prevDays => ({...prevDays, [e.target.name]: e.target.value }));\r\n    }\r\n\r\n\r\n    function getTimeInput(abv, end){\r\n        return(<div>\r\n            <Select\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                label=\"Type\"\r\n                name={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                value={daysOBJ[`${abv}Type Reg Vac Sick Pers Hol${end}`]}\r\n                onChange={handleChange}\r\n            >\r\n                <MenuItem value={\"Reg\"}>Reg</MenuItem>\r\n                <MenuItem value={\"Vac\"}>Vac</MenuItem>\r\n                <MenuItem value={\"Sick\"}>Sick</MenuItem>\r\n                <MenuItem value={\"Pers\"}>Pers</MenuItem>\r\n                <MenuItem value={\"Hol\"}>Hol</MenuItem>\r\n            </Select>\r\n\r\n            <TextField\r\n                label=\"In\"\r\n                type=\"time\"\r\n                name={`${abv}In${end}`}\r\n                value={daysOBJ[`${abv}In${end}`]}\r\n                onChange={handleChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 1500, // 15 min\r\n                }}\r\n                sx={{ width: 150 }}\r\n            />\r\n            \r\n            <TextField\r\n                label=\"Out\"\r\n                type=\"time\"\r\n                name={`${abv}Out${end}`}\r\n                value={daysOBJ[`${abv}Out${end}`]}\r\n                onChange={handleChange}\r\n                onBlur={e => {calcDayHours(abv)}}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 1500, // 15 min\r\n                }}\r\n                sx={{ width: 150 }}\r\n            />\r\n        </div>            \r\n        )\r\n    }\r\n\r\n\r\n    return (<div>\r\n            {abvList.map((abv, i) => {\r\n                return(<Grid>\r\n                    <p>{abv} - {daysOBJ[`${abv}Date_es_:date`]}{daysOBJ[`${abv}HOURS WORKED`]? \" - \" + daysOBJ[`${abv}HOURS WORKED`]+\" hrs.\":\"\"}</p>\r\n                    {getTimeInput(abv, \"\")}\r\n                    {getTimeInput(abv, \"_2\")}\r\n                    {getTimeInput(abv, \"_3\")}\r\n                    {getTimeInput(abv, \"_4\")}\r\n                </Grid>)\r\n            })}  \r\n            </div>)\r\n}\r\n","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\classes\\Days.js",[],{"ruleId":"59","severity":1,"message":"60","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":8,"column":10,"nodeType":"61","messageId":"62","endLine":8,"endColumn":21},{"ruleId":"59","severity":1,"message":"64","line":15,"column":10,"nodeType":"61","messageId":"62","endLine":15,"endColumn":14},{"ruleId":"59","severity":1,"message":"65","line":15,"column":16,"nodeType":"61","messageId":"62","endLine":15,"endColumn":23},{"ruleId":"59","severity":1,"message":"66","line":63,"column":9,"nodeType":"61","messageId":"62","endLine":63,"endColumn":14},{"ruleId":"59","severity":1,"message":"67","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":24},{"ruleId":"59","severity":1,"message":"68","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":16},{"ruleId":"59","severity":1,"message":"69","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"59","severity":1,"message":"70","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":24},{"ruleId":"59","severity":1,"message":"71","line":8,"column":8,"nodeType":"61","messageId":"62","endLine":8,"endColumn":16},{"ruleId":"59","severity":1,"message":"72","line":9,"column":8,"nodeType":"61","messageId":"62","endLine":9,"endColumn":12},{"ruleId":"59","severity":1,"message":"73","line":12,"column":8,"nodeType":"61","messageId":"62","endLine":12,"endColumn":24},{"ruleId":"59","severity":1,"message":"74","line":16,"column":8,"nodeType":"61","messageId":"62","endLine":16,"endColumn":19},{"ruleId":"59","severity":1,"message":"75","line":57,"column":35,"nodeType":"61","messageId":"62","endLine":57,"endColumn":42},{"ruleId":"59","severity":1,"message":"76","line":57,"column":44,"nodeType":"61","messageId":"62","endLine":57,"endColumn":48},{"ruleId":"59","severity":1,"message":"77","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"78","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":15},{"ruleId":"59","severity":1,"message":"79","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":22},{"ruleId":"59","severity":1,"message":"80","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":28},{"ruleId":"59","severity":1,"message":"81","line":8,"column":8,"nodeType":"61","messageId":"62","endLine":8,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":24,"column":44,"nodeType":"84","messageId":"85","endLine":24,"endColumn":89,"fix":"86"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PDFDocument' is defined but never used.","'form' is assigned a value but never used.","'setForm' is assigned a value but never used.","'sDate' is assigned a value but never used.","'useState' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'FormControl' is defined but never used.","'setters' is assigned a value but never used.","'days' is assigned a value but never used.","'useEffect' is defined but never used.","'DateFns' is defined but never used.","'AdapterDateFns' is defined but never used.","'LocalizationProvider' is defined but never used.","'TimePicker' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"GRAND TOTALHOURS WORKED\"] found.","Property","unnecessarilyComputedProperty",{"range":"87","text":"88"},[970,997],"\"GRAND TOTALHOURS WORKED\""]