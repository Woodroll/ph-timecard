[{"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\index.js":"1","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\App.js":"2","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\FillerButton.js":"4","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\Form.js":"5","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\DayInputs.js":"6","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\classes\\Days.js":"7"},{"size":500,"mtime":1615387354323,"results":"8","hashOfConfig":"9"},{"size":3292,"mtime":1626716453894,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1615387354323,"results":"11","hashOfConfig":"9"},{"size":2798,"mtime":1626368356056,"results":"12","hashOfConfig":"9"},{"size":5203,"mtime":1626363962325,"results":"13","hashOfConfig":"9"},{"size":5797,"mtime":1626715303720,"results":"14","hashOfConfig":"9"},{"size":784,"mtime":1625946733925,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1jm0jpo",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\index.js",[],["33","34"],"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\App.js",["35","36"],"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\FillerButton.js",[],"C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\Form.js",["37","38","39"],"import React from 'react';\r\nimport {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DayInputs from './DayInputs.js';\r\n\r\n\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright Â© '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// const useStyles = createStyles((theme) => {return ({\r\n//   paper: {\r\n//     marginTop: theme.spacing(7),\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//   },\r\n//   avatar: {\r\n//     margin: theme.spacing(1),\r\n//     backgroundColor: theme.palette.secondary.main,\r\n//   },\r\n//   form: {\r\n//     width: '100%', // Fix IE 11 issue.\r\n//     marginTop: theme.spacing(3),\r\n//   },\r\n//   submit: {\r\n//     margin: theme.spacing(3, 0, 2),\r\n//   },\r\n// })});\r\n\r\n\r\nconst Form = (props) => {\r\n    // const classes = useStyles();\r\n    const {timeCard, setTimeCard, daysOBJ, setDays, abvList} = props\r\n\r\n    function handleChange(e) {\r\n        e.persist();\r\n        setTimeCard(prevTC => ({...prevTC, [e.target.name]: e.target.value }));\r\n        //console.log(timeCard);\r\n    }\r\n\r\n    function handleWeekChange(e) {\r\n        e.persist();\r\n        setTimeCard(prevTC => ({...prevTC, [e.target.name]: e.target.value }));\r\n        abvList.forEach((abv, i)=>{\r\n            const dateSunday = new Date(Date.parse(`${e.target.value}T00:00:00`));             \r\n            const date = new Date(dateSunday.setDate(dateSunday.getDate() - (6 - i)))\r\n            const formatedDate = `${date.getMonth()+1}/${date.getDate()}`\r\n            console.log(`i:${i}, date:${date}, fd:${formatedDate}`)\r\n           \r\n            setDays(prevDays => ({...prevDays, [`${abv}Date_es_:date`]  : formatedDate})) \r\n    })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n    <Container component=\"main\">\r\n      <CssBaseline />\r\n      <div className=\"classes.paper\">\r\n        <Typography component=\"h1\" variant=\"h3\">\r\n          Time Card\r\n        </Typography>\r\n        <form className=\"classes.form\" onSubmit={handleSubmit} onInput={handleChange} noValidate>\r\n\r\n            <Grid container spacing={2}>\r\n            \r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Name\"\r\n                label=\"Name\"\r\n                name=\"Name\"\r\n                value={timeCard? timeCard[\"Name\"]:\"\"}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Position\"\r\n                label=\"Position\"\r\n                name=\"Position\"\r\n                value={timeCard? timeCard[\"Position\"]:\"\"}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <TextField\r\n                //TODO: Sundays only???\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"Pay Week Ending\"\r\n                label=\"Pay Week Ending\"\r\n                id=\"PayWeekEnding\"\r\n                onChange = {handleWeekChange}\r\n                value={timeCard? timeCard[\"Pay Week Ending\"]:\"\"}\r\n                \r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            \r\n\r\n            <DayInputs \r\n                daysOBJ={daysOBJ}\r\n                setDays={setDays}\r\n                abvList={abvList}/>\r\n\r\n            </Grid> \r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"classes.submit\"\r\n            // onClick={e => console.log(e)}\r\n          >\r\n            Time Card\r\n          </Button>\r\n\r\n          \r\n\r\n\r\n          <Grid container justify=\"flex-end\">\r\n            {/* <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid> */}\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={5}>\r\n      </Box> */}\r\n    </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default Form\r\n","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\componets\\DayInputs.js",["40","41"],"import React from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Stack from '@material-ui/core/Stack';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function DayInputs(props) {\r\n    const {daysOBJ, setDays, abvList} = props\r\n\r\n    console.log(daysOBJ);\r\n\r\n    function DayColHead(props) {\r\n        const {abv, daysOBJ} = props\r\n        return (<>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {abv}\r\n                {\" - \"}\r\n                {daysOBJ[`${abv}Date_es_:date`]}\r\n            </Typography>\r\n            <Typography>\r\n                {daysOBJ[`${abv}HOURS WORKED`]? daysOBJ[`${abv}HOURS WORKED`]+\" hrs.\":\" -- \"}\r\n            </Typography>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    function parseTime(time){\r\n        console.log((Math.round(time.slice(3,5)/15))*25*.01)\r\n        return Number(time.slice(0,2)) + (Math.round(time.slice(3,5)/15))*25*.01\r\n    }\r\n\r\n    function calWeekHours() {\r\n        let total = 0\r\n        abvList.forEach(abv => {if(daysOBJ[`${abv}HOURS WORKED`]) {total += Number(daysOBJ[`${abv}HOURS WORKED`])}});\r\n        console.log(\"week total:\", total)\r\n        setDays(prevDays => ({...prevDays, \"GRAND TOTALHOURS WORKED\" : total.toString() }));\r\n    }\r\n\r\n    // const totals = [daysOBJ[\"MONHOURS WORKED\"], daysOBJ[\"TUEHOURS WORKED\"],daysOBJ[\"WEDHOURS WORKED\"],\r\n    // daysOBJ[\"THURHOURS WORKED\"], daysOBJ[\"FRIHOURS WORKED\"], daysOBJ[\"SATHOURS WORKED\"], daysOBJ[\"SUNHOURS WORKED\"],]\r\n\r\n    function calcDayHours(abv) {\r\n        console.log(\"Calc Ran!!!\", abv)\r\n        let total = 0\r\n        if (daysOBJ[`${abv}In`] && daysOBJ[`${abv}Out`]) {\r\n            total = parseTime(daysOBJ[`${abv}Out`]) - parseTime(daysOBJ[`${abv}In`])\r\n            if (daysOBJ[`${abv}In_2`] && daysOBJ[`${abv}Out_2`]) {\r\n                total += parseTime(daysOBJ[`${abv}Out_2`]) - parseTime(daysOBJ[`${abv}In_2`])\r\n                if (daysOBJ[`${abv}In_3`] && daysOBJ[`${abv}Out_3`]) {\r\n                    total += parseTime(daysOBJ[`${abv}Out_3`]) - parseTime(daysOBJ[`${abv}In_3`])\r\n                    if (daysOBJ[`${abv}In_4`] && daysOBJ[`${abv}Out_4`]) {\r\n                        total += parseTime(daysOBJ[`${abv}Out_4`]) - parseTime(daysOBJ[`${abv}In_4`])\r\n                    }\r\n                }\r\n            }        \r\n        }\r\n        setDays(prevDays => ({...prevDays, [`${abv}HOURS WORKED`]: total.toString() }));\r\n        console.log(\"total:\", total);\r\n        calWeekHours()\r\n    }\r\n\r\n    function handleChange(e) {\r\n        //e.persist();\r\n        setDays(prevDays => ({...prevDays, [e.target.name]: e.target.value }));\r\n    }\r\n\r\n    function getTimeInput(abv, end, key){\r\n        return(<Grid item container fullWidth sx={12} mt={3} name={abv} key={key} id={abv} onClick={e => {calcDayHours(abv); calWeekHours();}} onBlur={e => {calcDayHours(abv); calWeekHours();}}>\r\n            <Stack spacing={1}  alignItems=\"stretch\" direction={{ xs: 'row', sm: 'column' }}>\r\n            <Select\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                label={<InputLabel>Type</InputLabel>}\r\n                name={`${abv}Type Reg Vac Sick Pers Hol${end}`}\r\n                value={daysOBJ[`${abv}Type Reg Vac Sick Pers Hol${end}`]}\r\n                onChange={e => {handleChange(e)}}\r\n                sx={{ width: 150 }}\r\n            >\r\n                <MenuItem value={\"\"}>---</MenuItem>\r\n                <MenuItem value={\"Reg\"}>Reg</MenuItem>\r\n                <MenuItem value={\"Vac\"}>Vac</MenuItem>\r\n                <MenuItem value={\"Sick\"}>Sick</MenuItem>\r\n                <MenuItem value={\"Pers\"}>Pers</MenuItem>\r\n                <MenuItem value={\"Hol\"}>Hol</MenuItem>\r\n            </Select>\r\n\r\n            <TextField\r\n                label=\"In\"\r\n                type=\"time\"\r\n                fullWidth\r\n                name={`${abv}In${end}`}\r\n                value={daysOBJ[`${abv}In${end}`]}\r\n                onChange={handleChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                    elevation: 0,\r\n                }}\r\n                inputProps={{\r\n                    step: 1500, // 15 min\r\n                }}\r\n                elevation={0}\r\n                // sx={{ width: 150 }}\r\n            />\r\n            \r\n            <TextField\r\n                label=\"Out\"\r\n                type=\"time\"\r\n                fullWidth\r\n                name={`${abv}Out${end}`}\r\n                value={daysOBJ[`${abv}Out${end}`]}\r\n                onChange={e => {handleChange(e)}}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 1500, // 15 min\r\n                }}\r\n                // sx={{ width: 150 }}\r\n            />\r\n   \r\n        </Stack>    \r\n        </Grid>            \r\n        )\r\n    }\r\n    \r\n\r\n    return (<Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n            {abvList.map((abv, i) => {\r\n                return(<Stack item fullWidth sm={12/7} xs={12} key={i} container spacing={0} alignItems=\"center\">\r\n                    <Stack mt={3} ><DayColHead  abv={abv} daysOBJ={daysOBJ}/></Stack>\r\n                    {getTimeInput(abv, \"\", 1)}\r\n                    {getTimeInput(abv, \"_2\", 2)}\r\n                    {getTimeInput(abv, \"_3\", 3)}\r\n                </Stack>)\r\n            })}\r\n            </Grid>)\r\n}\r\n","C:\\Users\\Jacob\\Desktop\\ph-timecard\\ph-timecard\\my-app\\src\\classes\\Days.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":29,"column":12,"nodeType":"48","messageId":"49","endLine":29,"endColumn":29},{"ruleId":"46","severity":1,"message":"50","line":40,"column":12,"nodeType":"48","messageId":"49","endLine":40,"endColumn":24},{"ruleId":"46","severity":1,"message":"51","line":2,"column":9,"nodeType":"48","messageId":"49","endLine":2,"endColumn":18},{"ruleId":"46","severity":1,"message":"52","line":8,"column":10,"nodeType":"48","messageId":"49","endLine":8,"endColumn":22},{"ruleId":"46","severity":1,"message":"53","line":10,"column":8,"nodeType":"48","messageId":"49","endLine":10,"endColumn":19},{"ruleId":"46","severity":1,"message":"53","line":9,"column":8,"nodeType":"48","messageId":"49","endLine":9,"endColumn":19},{"ruleId":"46","severity":1,"message":"54","line":10,"column":8,"nodeType":"48","messageId":"49","endLine":10,"endColumn":13},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'setDatesOfTheWeek' is defined but never used.","Identifier","unusedVar","'calWeekHours' is defined but never used.","'useEffect' is defined but never used.","'createStyles' is defined but never used.","'FormControl' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation"]